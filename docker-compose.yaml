version: "3.7"
services:
  api:
    image: ${API_IMAGE:-gcr.io/athenian-1/api:latest}
    restart: unless-stopped
    entrypoint: ['/bin/sh']
    command: >
      -c "python3 -m athenian.api.models.state \
            postgresql://${POSTGRES_USER:-api}:${POSTGRES_PASSWORD:-api}@postgres:5432/state &&
          python3 -m athenian.api.models.precomputed \
            postgresql://${POSTGRES_USER:-api}:${POSTGRES_PASSWORD:-api}@postgres:5432/precomputed &&
          python3 -m athenian.api.models.metadata \
            postgresql://${REMOTE_POSTGRES_USER}:${REMOTE_POSTGRES_PASSWORD}@cloud_sql_proxy:5432/metadata &&
          python3 -m athenian.api \
            --log-level=${API_LOG_LEVEL:-INFO} \
            --log-structured \
            --host=0.0.0.0 \
            --port=8080 \
            --memcached=memcached:11211 \
            --metadata-db=postgresql://${REMOTE_POSTGRES_USER}:${REMOTE_POSTGRES_PASSWORD}@cloud_sql_proxy:5432/metadata \
            --state-db=postgresql://${POSTGRES_USER:-api}:${POSTGRES_PASSWORD:-api}@postgres:5432/state \
            --precomputed-db=postgresql://${POSTGRES_USER:-api}:${POSTGRES_PASSWORD:-api}@postgres:5432/precomputed \
            --ui \
            --no-google-kms"
    env_file: .env
    ports:
      - ${API_HOST_PORT:-8080}:8080
    depends_on:
      - postgres
      - memcached

  memcached:
    image: launcher.gcr.io/google/memcached1
    command: ['memcached', '-m', '1024M', '-I', '128M']
    ports:
      - ${MEMCACHED_HOST_PORT:-11211}:11211

  postgres:
    image: postgres:11.6
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-api}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-api}
      POSTGRES_SOURCE_HOST: cloud_sql_proxy
      POSTGRES_SOURCE_PORT: 5432
    ports:
      - ${POSTGRES_HOST_PORT:-5432}:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./load_pg_data.sh:/load_data.sh
    depends_on:
      - cloud_sql_proxy

  cloud_sql_proxy:
    image: atholeque/goterracloud
    command: [
      'cloud_sql_proxy',
      '-instances=${CLOUD_SQL_INSTANCE}=tcp:0.0.0.0:5432',
    ]
    volumes:
      - ~/.config/gcloud:/root/.config/gcloud

volumes:
  postgres:
    external: false
