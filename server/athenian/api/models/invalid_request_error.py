# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from athenian.api.models.base_model_ import Model
from athenian.api import util


class InvalidRequestError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: str = None, pointer: str = None):
        """InvalidRequestError - a model defined in OpenAPI

        :param error: The error of this InvalidRequestError.
        :param pointer: The pointer of this InvalidRequestError.
        """
        self.openapi_types = {"error": str, "pointer": str}

        self.attribute_map = {"error": "error", "pointer": "pointer"}

        self._error = error
        self._pointer = pointer

    @classmethod
    def from_dict(cls, dikt: dict) -> "InvalidRequestError":
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvalidRequestError of this InvalidRequestError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this InvalidRequestError.

        Why the server thinks the request is invalid.

        :return: The error of this InvalidRequestError.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this InvalidRequestError.

        Why the server thinks the request is invalid.

        :param error: The error of this InvalidRequestError.
        :type error: str
        """
        if error is None:
            raise ValueError("Invalid value for `error`, must not be `None`")

        self._error = error

    @property
    def pointer(self):
        """Gets the pointer of this InvalidRequestError.

        Path to the offending request item.

        :return: The pointer of this InvalidRequestError.
        :rtype: str
        """
        return self._pointer

    @pointer.setter
    def pointer(self, pointer):
        """Sets the pointer of this InvalidRequestError.

        Path to the offending request item.

        :param pointer: The pointer of this InvalidRequestError.
        :type pointer: str
        """
        if pointer is None:
            raise ValueError("Invalid value for `pointer`, must not be `None`")

        self._pointer = pointer
