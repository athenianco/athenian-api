from typing import List, Optional

from athenian.api.models.web.base_model_ import Model
from athenian.api.models.web.jira_epic import JIRAEpic
from athenian.api.models.web.jira_label import JIRALabel


class FoundJIRAStuff(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    openapi_types = {"epics": List[JIRAEpic], "labels": List[JIRALabel]}
    attribute_map = {"epics": "epics", "labels": "labels"}
    __slots__ = ["_" + k for k in openapi_types]

    def __init__(self,
                 epics: Optional[List[JIRAEpic]] = None,
                 labels: Optional[List[JIRALabel]] = None):
        """FoundJIRAStuff - a model defined in OpenAPI

        :param epics: The epics of this FoundJIRAStuff.
        :param labels: The labels of this FoundJIRAStuff.
        """
        self._epics = epics
        self._labels = labels

    @property
    def epics(self) -> List[JIRAEpic]:
        """Gets the epics of this FoundJIRAStuff.

        :return: The epics of this FoundJIRAStuff.
        """
        return self._epics

    @epics.setter
    def epics(self, epics: List[JIRAEpic]):
        """Sets the epics of this FoundJIRAStuff.

        :param epics: The epics of this FoundJIRAStuff.
        """
        if epics is None:
            raise ValueError("Invalid value for `epics`, must not be `None`")

        self._epics = epics

    @property
    def labels(self) -> List[JIRALabel]:
        """Gets the labels of this FoundJIRAStuff.

        :return: The labels of this FoundJIRAStuff.
        """
        return self._labels

    @labels.setter
    def labels(self, labels: List[JIRALabel]):
        """Sets the labels of this FoundJIRAStuff.

        :param labels: The labels of this FoundJIRAStuff.
        """
        if labels is None:
            raise ValueError("Invalid value for `labels`, must not be `None`")

        self._labels = labels
