from http import HTTPStatus
from typing import List, Optional

from athenian.api.models.web.generic_error import GenericError


class NoSourceDataError(GenericError):
    """This class is auto generated by OpenAPI Generator (https://openapi-generator.tech)."""

    def __init__(
        self,
        repositories: Optional[List[str]] = None,
        title: str = HTTPStatus.UNPROCESSABLE_ENTITY.phrase,
        status: int = HTTPStatus.UNPROCESSABLE_ENTITY,
        detail: str = None,
        instance: str = None,
    ):
        """NoSourceDataError - a model defined in OpenAPI

        :param title: The title of this NoSourceDataError.
        :param status: The status of this NoSourceDataError.
        :param detail: The detail of this NoSourceDataError.
        :param instance: The instance of this NoSourceDataError.
        :param repositories: The repositories of this NoSourceDataError.
        """
        super().__init__(type="/errors/NoSourceDataError", title=title, status=status,
                         detail=detail, instance=instance)
        self.openapi_types.update({
            "repositories": List[str],
        })

        self.attribute_map.update({
            "repositories": "repositories",
        })

        self._repositories = repositories

    @property
    def repositories(self) -> Optional[List[str]]:
        """Gets the repositories of this NoSourceDataError.

        :return: The repositories of this NoSourceDataError.
        """
        return self._repositories

    @repositories.setter
    def repositories(self, repositories: Optional[List[str]]):
        """Sets the repositories of this NoSourceDataError.

        :param repositories: The repositories of this NoSourceDataError.
        """
        self._repositories = repositories
