openapi: 3.0.3
info:
  contact:
    email: admin@athenian.co
    name: the admins by email
  description: 'Server version: {{ server_version }} built on {{ build_date }} @
    [{{ commit }}](https://github.com/athenianco/athenian-api/commit/{{ commit }})'
  license:
    name: CC-BY-4.0
  title: '{{ title }}'
  version: 1.0.9
servers:
- description: '{{ server_description }} - {{ server_url }}'
  url: '{{ server_url }}/v1'
paths:
  /account/{id}:
    get:
      operationId: get_account
      parameters:
      - description: Numeric identifier of the account to list. The user must belong
          to that account. To find out which accounts the user belongs to, see `/user`.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: List the current user's account members.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user does not have access to this account.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The account was not found.
      security:
      - bearerAuth: []
      summary: List the current user's account members.
      tags:
      - user
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.user_controller
      x-codegen-request-body-name: body
  /become:
    get:
      operationId: become_user
      parameters:
      - description: Numeric identifier of the user to turn into.
        explode: false
        in: query
        name: id
        required: false
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Details of the new active user, the same as `/user`.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Current user is not allowed to mutate.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Requested user does not exist.
      security:
      - bearerAuth: []
      summary: '"God mode" ability to turn into any user. The current user must be
        marked internally as a super admin.'
      tags:
      - user
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.user_controller
      x-codegen-request-body-name: body
  /filter/commits:
    post:
      operationId: filter_commits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterCommitsRequest'
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitsGroupedByTime'
          description: Commits that satisfy the specified filters grouped by date.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Current user is not allowed to access the specified account.
      security:
      - bearerAuth: []
      summary: Find commits that match the specified query and group them with the
        required time granularity.
      tags:
        - filter
# {% if False %}
        - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.filter_controller
      x-codegen-request-body-name: body
  /filter/contributors:
    post:
      operationId: filter_contributors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterContribsOrReposRequest'
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperSet'
          description: Repositories that were updated within the given timeframe.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Current user is not allowed to access the specified account.
      security:
      - bearerAuth: []
      summary: Find developers that made an action within the given timeframe.
      tags:
      - filter
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.filter_controller
      x-codegen-request-body-name: body
  /filter/pull_requests:
    post:
      operationId: filter_prs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterPullRequestsRequest'
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequestSet'
          description: List of pull requests satisfying the specified filters.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Current user is not allowed to access the specified account
            or reposets.
      security:
      - bearerAuth: []
      summary: List pull requests that satisfy the query.
      tags:
      - filter
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.filter_controller
  /filter/repositories:
    post:
      operationId: filter_repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterContribsOrReposRequest'
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositorySet'
          description: Repositories that were updated within the given timeframe.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Current user is not allowed to access the specified account
            or reposets.
      security:
      - bearerAuth: []
      summary: Find repositories that were updated within the given timeframe.
      tags:
      - filter
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.filter_controller
      x-codegen-request-body-name: body
  /invite/accept:
    put:
      operationId: accept_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationLink'
        description: Accepted invitation details.
        required: true
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitedUser'
          description: Details about the new user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Something is wrong with the invitation URL.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Invitation was disabled.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Invitation was not found.
      security:
      - bearerAuth: []
      summary: Accept the account membership invitation and finish registration. The
        user must be already authorized in Auth0.
      tags:
      - registration
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.invitation_controller
      x-codegen-request-body-name: body
  /invite/check:
    post:
      operationId: check_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationLink'
        description: Checked invitation details.
        required: true
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationCheckResult'
          description: 'Result of checking an invitation URL: invitation type, whether
            it is correctly formed and is enabled.'
      summary: Given an invitation URL, get its type (admin or regular account member)
        and find whether it is correctly formed and is enabled or disabled.
      tags:
      - registration
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.invitation_controller
      x-codegen-request-body-name: body
  /invite/generate/{id}:
    get:
      operationId: gen_invitation
      parameters:
      - description: Numeric identifier of the account where to invite new users.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationLink'
          description: The invitation link has been generated successfully.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to invite for this account.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The account was not found.
      security:
      - bearerAuth: []
      summary: Generate an account invitation link for regular users. The caller must
        be an admin of the specified account.
      tags:
      - registration
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.invitation_controller
      x-codegen-request-body-name: body
  /invite/progress/{id}:
    get:
      operationId: eval_invitation_progress
      parameters:
      - description: Numeric identifier of the account which the user has joined.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallationProgress'
          description: Status of installing Athenian for the current user and the
            given account.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The account does not exist or the user is not its member.
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The installation has not started yet.
      security:
      - bearerAuth: []
      summary: Return the current Athenian GitHub app installation progress.
      tags:
      - registration
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.invitation_controller
  /metrics/code_bypassing_prs:
    post:
      operationId: calc_code_bypassing_prs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitFilter'
        description: Query for measuring the amount of code that was pushed outside
          of pull requests.
        required: true
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasuredCodeBypassingPRs'
          description: Calculated metrics.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
          description: The request was invalid.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to access the specified repositories
            on behalf of the specified account.
      security:
      - bearerAuth: []
      summary: Measure the amount of code that was pushed outside of pull requests.
      tags:
      - metrics
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.metrics_controller
      x-codegen-request-body-name: body
  /metrics/prs:
    post:
      operationId: calc_metrics_pr_linear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestMetricsRequest'
        description: Desired metric definitions.
        required: true
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedMetrics'
          description: Calculated metrics.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
          description: The request was invalid.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to calculate metrics on behalf of the
            specified account.
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSourceDataError'
          description: No data is available to calculate metrics for the given repositories.
      security:
      - bearerAuth: []
      summary: Calculate linear metrics over PRs.
      tags:
      - metrics
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.metrics_controller
      x-codegen-request-body-name: body
  /reposet/create:
    post:
      operationId: create_reposet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositorySetCreateRequest'
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedIdentifier'
          description: Identifier of the created repository set.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to create a repository set from the specified
            items.
      security:
      - bearerAuth: []
      summary: Create a repository set.
      tags:
      - reposet
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.reposet_controller
      x-codegen-request-body-name: body
  /reposet/{id}:
    delete:
      operationId: delete_reposet
      parameters:
      - description: Numeric identifier of the repository set to list.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: Empty object indicates a successful removal.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to delete the specified repository set.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The specified repository set was not found.
      security:
      - bearerAuth: []
      summary: Delete a repository set. The user must be an admin of the account that
        owns the reposet.
      tags:
      - reposet
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.reposet_controller
      x-codegen-request-body-name: body
    get:
      operationId: get_reposet
      parameters:
      - description: Numeric identifier of the repository set to list.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositorySet'
          description: List of repositories in the specified set.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to list the specified repository set.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The specified repository set was not found.
      security:
      - bearerAuth: []
      summary: List a repository set. The user must be in the account that owns the
        reposet.
      tags:
      - reposet
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.reposet_controller
      x-codegen-request-body-name: body
    put:
      operationId: update_reposet
      parameters:
      - description: Numeric identifier of the repository set to list.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositorySet'
        x-body-name: body
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: Empty object indicates a successful operation.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user is forbidden to update the specified repository set.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The specified repository set was not found.
      security:
      - bearerAuth: []
      summary: Update a repository set. The user must be an admin of the account that
        owns the reposet.
      tags:
      - reposet
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.reposet_controller
      x-codegen-request-body-name: body
  /reposets/{id}:
    get:
      operationId: list_reposets
      parameters:
      - description: Numeric identifier of the account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositorySetList'
          description: List the repository sets belonging to the specified account.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: The user does not belong to the specified account.
      security:
      - bearerAuth: []
      summary: List the repository sets belonging to the current user.
      tags:
      - reposet
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.reposet_controller
      x-codegen-request-body-name: body
  /user:
    get:
      operationId: get_user
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Details about the current user.
      security:
      - bearerAuth: []
      summary: Show details about the current user.
      tags:
      - user
# {% if False %}
      - default
# {% endif %}
      x-openapi-router-controller: athenian.api.controllers.user_controller
      x-codegen-request-body-name: body
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: athenian.api.controllers.security_controller.info_from_bearerAuth
  schemas:
    CreatedIdentifier:
      example:
        id: 777
      properties:
        id:
          description: Identifier of the created entity.
          example: 777
          type: integer
      required:
      - id
      type: object
    GenericError:
      properties:
        type:
          description: URI reference that identifies the problem type (RFC 7807).
          example: /errors/metrics/pr_linear/InvalidRequestError
          type: string
        title:
          description: Short, human-readable summary of the problem type.
          example: Validation failed
          type: string
        status:
          description: Duplicated HTTP status code.
          example: 400
          type: integer
        detail:
          description: Human-readable explanation specific to this occurrence of the
            problem.
          example: '"pr-slave-time" is not one of [...].'
          type: string
        instance:
          description: URI reference that identifies the specific occurrence of the
            problem.
          example: https://sentry.io/athenian/api/?query=2763c4eabd7240f59829ee1a02546293
          type: string
      required:
      - title
      - type
      type: object
    InvalidRequestError:
      allOf:
      - $ref: '#/components/schemas/GenericError'
      - type: object
        properties:
          pointer:
            description: Path to the offending request item.
            example: .granularity
            type: string
    NoSourceDataError:
      allOf:
      - $ref: '#/components/schemas/GenericError'
      - properties:
          repositories:
            $ref: '#/components/schemas/RepositorySet'
        type: object
    MetricID:
      description: Currently supported metric types.
      enum:
      - pr-wip-time
      - pr-wip-count
      - pr-review-time
      - pr-review-count
      - pr-merging-time
      - pr-merging-count
      - pr-release-time
      - pr-release-count
      - pr-lead-time
      - pr-lead-count
      - pr-flow-ratio
      - pr-opened
      - pr-merged
      - pr-closed
      - pr-released
      - pr-wait-first-review
      example: pr-lead-time
      type: string
    DeveloperID:
      description: |
        User name which uniquely identifies any developer on any service provider.
        The format matches the profile URL without the protocol part.
      example: github.com/vmarkovtsev
      type: string
    RepositoryID:
      description: |
        Repository name which uniquely identifies any repository in any service provider.
        The format matches the repository URL without the protocol part. No ".git" should be appended.
        We support a special syntax for repository sets: "{reposet id}" adds all the repositories
        from the given set.
      example: github.com/src-d/go-git
      type: string
    DeveloperSet:
      description: A set of developers. An empty list disables the filter and includes
        everybody. Duplicates are automatically ignored.
      example:
      - github.com/vmarkovtsev
      - github.com/mcuadros
      items:
        $ref: '#/components/schemas/DeveloperID'
      type: array
    RepositorySet:
      description: A set of repositories. An empty list results an empty response
        in contrary to DeveloperSet. Duplicates are automatically ignored.
      example:
      - github.com/src-d/hercules
      - github.com/athenianco/athenian-api
      items:
        $ref: '#/components/schemas/RepositoryID'
      type: array
    RepositorySetList:
      description: List of repository sets owned by a user.
      items:
        $ref: '#/components/schemas/RepositorySetListItem'
      type: array
    RepositorySetCreateRequest:
      description: Repository set creation request.
      example:
        account: 1
        items:
        - github.com/src-d/hercules
        - github.com/athenianco/athenian-api
      properties:
        account:
          description: Account identifier. That account will own the created repository
            set. The user must be an admin of the account.
          type: integer
        items:
          $ref: '#/components/schemas/RepositorySet'
      required:
      - account
      - items
      type: object
    RepositorySetListItem:
      description: Element of RepositorySetList.
      example:
        items_count: 6
        created: 2020-01-23T04:56:07.000+00:00
        id: 1
        updated: 2020-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Repository set identifier.
          type: integer
        created:
          description: Date and time of creation of the repository set.
          format: date-time
          type: string
        updated:
          description: Date and time of the last change of the repository set.
          format: date-time
          type: string
        items_count:
          description: Number of repositories in the set.
          type: integer
      type: object
    User:
      description: User details. "updated" and "accounts" are populated only for the
        current user.
      example:
        id: github|60340680
        native_id: 60340680
        name: Groundskeeper Willie
        email: bot@athenian.co
        picture: https://avatars0.githubusercontent.com/u/60340680?v=4
        updated: 2020-01-23T12:00:00Z
      properties:
        id:
          description: Auth0 user identifier.
          type: string
        native_id:
          description: Auth backend user identifier.
          type: string
        name:
          description: Full name of the user.
          type: string
        email:
          description: Email of the user.
          type: string
        picture:
          description: Avatar URL of the user.
          type: string
        updated:
          description: Date and time of the last profile update.
          format: date-time
          type: string
        accounts:
          description: Mapping between account IDs the user is a member of and is_admin
            flags.
          example:
            1: true
            2: false
          type: object
      required:
      - email
      - id
      - name
      - native_id
      - picture
      type: object
    InvitedUser:
      description: Details about the user who has accepted an invitation.
      example:
        user:
          id: github|60340680
          native_id: 60340680
          name: Groundskeeper Willie
          email: bot@athenian.co
          picture: https://avatars0.githubusercontent.com/u/60340680?v=4
          updated: 2020-01-23T12:00:00Z
        account: 0
      properties:
        account:
          description: Joined account ID.
          type: integer
        user:
          $ref: '#/components/schemas/User'
      required:
      - account
      - user
      type: object
    Account:
      description: Account members. "updated" and "accounts" are not populated.
      example:
        regulars:
        - id: 248289761001
          name: Jane Josephine Doe
          email: janedoe@exampleco.com
          picture: http://exampleco.com/janedoe/me.jpg
          updated: 2020-01-23T12:00:00Z
        - id: 248289761001
          name: Jane Josephine Doe
          email: janedoe@exampleco.com
          picture: http://exampleco.com/janedoe/me.jpg
          updated: 2020-01-23T12:00:00Z
        admins:
        - id: 248289761001
          name: Jane Josephine Doe
          email: janedoe@exampleco.com
          picture: http://exampleco.com/janedoe/me.jpg
          updated: 2020-01-23T12:00:00Z
        - id: 248289761001
          name: Jane Josephine Doe
          email: janedoe@exampleco.com
          picture: http://exampleco.com/janedoe/me.jpg
          updated: 2020-01-23T12:00:00Z
      properties:
        admins:
          items:
            $ref: '#/components/schemas/User'
          type: array
        regulars:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - admins
      - regulars
      type: object
    InvitationLink:
      example:
        url: https://app.athenian.co/i/deadf88d
      properties:
        url:
          description: Invitation URL. Users are supposed to click it and become admins
            or regular account members.
          format: url
          type: string
      required:
      - url
      type: object
    InvitationCheckResult:
      example:
        active: true
        type: regular
        valid: true
      properties:
        active:
          description: Value indicating whether the invitation is still enabled.
          type: boolean
        type:
          description: Invited user's account membership status.
          enum:
          - admin
          - regular
          type: string
        valid:
          description: Value indicating whether the invitation URL is correctly formed.
          type: boolean
      required:
      - valid
      type: object
    InstallationProgress:
      description: Data fetching progress of the Athenian metadata retrieval app.
      example:
        tables:
        - fetched: 50
          name: Commit
          total: 100
        - fetched: 0
          name: PullRequest
          total: 20
        finished_date: 2020-01-23T04:56:07Z
        started_date: 2020-01-23T06:56:07Z
        owner: vmarkovtsev
        repositories: 30
      properties:
        started_date:
          description: Date and time when the historical data collection began.
          format: date-time
          type: string
        finished_date:
          description: Date and time when the historical data collection ended.
          format: date-time
          nullable: true
          type: string
        owner:
          description: Native user ID of the person who installed the metadata retrieval
            app.
          type: string
        repositories:
          description: Number of discovered repositories.
          type: integer
        tables:
          example:
          - fetched: 50
            name: Commit
            total: 100
          - fetched: 0
            name: PullRequest
          items:
            $ref: '#/components/schemas/TableFetchingProgress'
          type: array
      required:
      - finished_date
      - owner
      - repositories
      - started_date
      - tables
      type: object
    TableFetchingProgress:
      description: Used in InstallationProgress.tables to indicate how much data has
        been loaded in each DB table.
      example:
        fetched: 50
        name: Commit
        total: 100
      properties:
        fetched:
          description: How many records have been stored in the DB table so far.
          type: integer
        name:
          description: DB table identifier.
          type: string
        total:
          description: How many records the DB table is expected to have.
          type: integer
      required:
      - fetched
      - name
      - total
      type: object
    ForSet:
      example:
        repositories:
        - github.com/src-d/hercules
        - github.com/athenianco/athenian-api
        developers:
        - github.com/vmarkovtsev
        - github.com/mcuadros
      properties:
        repositories:
          $ref: '#/components/schemas/RepositorySet'
        developers:
          $ref: '#/components/schemas/DeveloperSet'
      required:
      - repositories
      type: object
    Granularity:
      description: 'How often the metrics are reported. The value must satisfy the
        following regular expression: (^([1-9]\d* )?(day|week|month|year)$'
      example: 2 week
      type: string
    PullRequestMetricsRequest:
      description: Request for calculating metrics on top of pull requests data.
      example:
        for:
        - repositories:
          - github.com/src-d/hercules
          - github.com/athenianco/athenian-api
          developers:
          - github.com/vmarkovtsev
          - github.com/mcuadros
        - repositories:
          - github.com/src-d/hercules
          - github.com/athenianco/athenian-api
          developers:
          - github.com/vmarkovtsev
          - github.com/mcuadros
        metrics:
        - pr-lead-time
        - pr-wip-time
        date_from: 2000-01-23
        date_to: 2020-01-23
        granularity: day
        account: 1
      properties:
        for:
          description: Sets of developers and repositories to calculate the metrics
            for.
          items:
            $ref: '#/components/schemas/ForSet'
          type: array
        metrics:
          description: Requested metric identifiers.
          items:
            $ref: '#/components/schemas/MetricID'
          type: array
        date_from:
          description: Date from when to start measuring the metrics.
          format: date
          type: string
        date_to:
          description: Date up to which to measure the metrics.
          format: date
          type: string
        granularity:
          $ref: '#/components/schemas/Granularity'
        account:
          description: Session account ID.
          type: integer
      required:
      - account
      - date_from
      - date_to
      - for
      - granularity
      - metrics
      type: object
    CalculatedMetric:
      description: Series of calculated metrics for a specific set of repositories
        and developers.
      example:
        values:
        - date: 2000-01-23
          values:
          - 0.8008282
          - 0.8008282
          confidence_mins:
          - 0.5
          - 0.5
          confidence_maxs:
          - 1.0
          - 1.0
          confidence_scores:
          - 75
          - 75
        - date: 2000-01-23
          values:
          - 0.8008282
          - 0.8008282
          confidence_mins:
          - 0.5
          - 0.5
          confidence_maxs:
          - 1.0
          - 1.0
          confidence_scores:
          - 75
          - 75
        for:
          repositories:
          - github.com/src-d/hercules
          - github.com/athenianco/athenian-api
          developers:
          - github.com/vmarkovtsev
          - github.com/mcuadros
      properties:
        for:
          $ref: '#/components/schemas/ForSet'
        values:
          items:
            $ref: '#/components/schemas/CalculatedMetricValues'
          type: array
      required:
      - for
      - values
      type: object
    CalculatedMetrics:
      example:
        metrics:
        - pr-lead-time
        - pr-wip-time
        date_from: 2000-01-23
        granularity: day
        calculated:
        - values:
          - date: 2000-01-23
            values:
            - 0.8008282
            - 0.8008282
            confidence_mins:
            - 0.5
            - 0.5
            confidence_maxs:
            - 1.0
            - 1.0
            confidence_scores:
            - 75
            - 75
          - date: 2000-01-23
            values:
            - 0.8008282
            - 0.8008282
            confidence_mins:
            - 0.5
            - 0.5
            confidence_maxs:
            - 1.0
            - 1.0
            confidence_scores:
            - 75
            - 75
          for:
            developers:
            - github.com/vmarkovtsev
            - github.com/mcuadros
            repositories:
            - github.com/src-d/hercules
            - github.com/athenianco/athenian-api
        - values:
          - date: 2000-01-23
            values:
            - 0.8008282
            - 0.8008282
            confidence_mins:
            - 0.5
            - 0.5
            confidence_maxs:
            - 1.0
            - 1.0
            confidence_scores:
            - 75
            - 75
          - date: 2000-01-23
            values:
            - 0.8008282
            - 0.8008282
            confidence_mins:
            - 0.5
            - 0.5
            confidence_maxs:
            - 1.0
            - 1.0
            confidence_scores:
            - 75
            - 75
          for:
            developers:
            - github.com/vmarkovtsev
            - github.com/mcuadros
            repositories:
            - github.com/src-d/hercules
            - github.com/athenianco/athenian-api
        date_to: 2020-01-23
      properties:
        calculated:
          description: Values of the requested metrics through time. The sequence
            order is not guaranteed to be the same as in the preceding request.
          items:
            $ref: '#/components/schemas/CalculatedMetric'
          type: array
        metrics:
          description: Repeats `PullRequestMetricsRequest.metrics`.
          items:
            $ref: '#/components/schemas/MetricID'
          type: array
        date_from:
          description: Repeats `PullRequestMetricsRequest.date_from`.
          format: date
          type: string
        date_to:
          description: Repeats `PullRequestMetricsRequest.date_to`.
          format: date
          type: string
        granularity:
          $ref: '#/components/schemas/Granularity'
      required:
      - calculated
      - date_from
      - date_to
      - granularity
      - metrics
      type: object
    CalculatedMetricValues:
      example:
        date: 2000-01-23
        values:
        - 0.8008282
        - 0.8008282
        confidence_mins:
        - 0.5
        - 0.5
        confidence_maxs:
        - 1.0
        - 1.0
        confidence_scores:
        - 75
        - 75
      properties:
        date:
          description: Where you should relate the metric value to on the time axis.
          format: date
          type: string
        values:
          description: Calculated metric values in the same order as `metrics`.
          items:
# {% if False %}
            allOf:
# {% else %}{{ "\n" }}            oneOf:{% endif %}
            - type: integer
            - format: float
              type: number
            - type: string
          type: array
        confidence_mins:
          description: Confidence interval @ p=0.95, minimum. The same order as `metrics`.
            It is optional because there can be exact metrics like "count open PRs
            per month".
          items:
# {% if False %}
            allOf:
# {% else %}{{ "\n" }}            oneOf:{% endif %}
            - type: integer
            - format: float
              type: number
            - type: string
          type: array
        confidence_maxs:
          description: Confidence interval @ p=0.95, maximum. The same order as `metrics`.
            It is optional because there can be exact metrics like "count open PRs
            per month".
          items:
# {% if False %}
            allOf:
# {% else %}{{ "\n" }}            oneOf:{% endif %}
            - type: integer
            - format: float
              type: number
            - type: string
          type: array
        confidence_scores:
          description: Confidence score from 0 (no idea) to 100 (very confident).
            The same order as `metrics`.
          items:
            type: integer
          type: array
      required:
      - date
      - values
    FilterContribsOrReposRequest:
      description: PR filters for /filter/contributors and /filter/repositories.
      example:
        account: 1
        date_from: 2000-01-23
        date_to: 2020-05-23
        in:
        - '{1}'
      properties:
        account:
          description: Session account ID.
          type: integer
        date_from:
          description: Updates must be later than or equal to this date. An update
            is any action that influences the stage assignment.
          format: date
          type: string
        date_to:
          description: Updates must be earlier than or equal to this date. An update
            is any action that influences the stage assignment.
          format: date
          type: string
        in:
          $ref: '#/components/schemas/RepositorySet'
      required:
      - account
      - date_from
      - date_to
      type: object
    FilterPullRequestsRequest:
      description: Filters for /filter/pull_requests. Empty `properties` passes through
        all PRs matched by the other filters.
      example:
        account: 1
        date_from: 2000-01-23
        date_to: 2020-05-23
        in:
        - '{1}'
        stages:
        - wip
        with:
          author:
          - github.com/vmarkovtsev
      properties:
        account:
          description: Session account ID.
          type: integer
        date_from:
          description: PRs must be updated later than or equal to this date.
          format: date
          type: string
        date_to:
          description: PRs must be updated earlier than or equal to this date.
          format: date
          type: string
        in:
          $ref: '#/components/schemas/RepositorySet'
        stages:
          items:
            $ref: '#/components/schemas/PullRequestPipelineStage'
          type: array
        properties:
          items:
            $ref: '#/components/schemas/PullRequestProperty'
          type: array
        with:
          $ref: '#/components/schemas/PullRequestWith'
      required:
      - account
      - date_from
      - date_to
      type: object
    PullRequestPipelineStage:
      description: One of the four possible PR states of the modelled lifecycle.
      enum:
      - wip
      - review
      - merge
      - release
      - done  # PR afterlife - PRs that were released or rejected and nothing ever happens to them
      example: wip
      type: string
    PullRequestProperty:
      description: PR's modelled lifecycle stage or various events that happened
        between `time_from` and `time_to`.
      enum:
        - wip
        - created
        - commit_happened
        - reviewing
        - review_happened
        - approve_happened
        - merging
        - merge_happened
        - releasing
        - release_happened
        - done  # PR afterlife - PRs that were released or rejected and nothing ever happens to them
      example: wip
      type: string
    PullRequestSet:
      description: List of pull requests together with the participant profile pictures.
      example:
        include:
          users:
            key:
              avatar: https://avatars0.githubusercontent.com/u/60340680?v=4
        data:
        - repository: github.com/src-d/go-git
          number: 1152
          title: 'Fix an edge case when fetching remotes with unrelated incomplete
            history. Fixes #1151'
          size_added: 37
          size_removed: 1
          files_changed: 2
          created: 2019-05-17T01:14:00Z
          updated: 2019-09-18T10:49:00Z
          stage: wip
          participants:
          - id: github.com/NonLogicalDev
            status: author
          - id: github.com/mcuadros
            status: commenter
      properties:
        include:
          $ref: '#/components/schemas/IncludedNativeUsers'
        data:
          description: List of matched pull requests.
          items:
            $ref: '#/components/schemas/PullRequest'
          type: array
      required:
      - data
      - include
      type: object
    IncludedNativeUser:
      description: User traits such as the avatar URL.
      example:
        avatar: https://avatars0.githubusercontent.com/u/60340680?v=4
      properties:
        avatar:
          format: url
          type: string
      required:
      - avatar
    IncludedNativeUsers:
      example:
        users:
          github.com/gkwillie:
            avatar: https://avatars0.githubusercontent.com/u/60340680?v=4
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/IncludedNativeUser'
          description: Mapping user native (e.g., GitHub) login ID -> user details.
            The users are mentioned in the PRs from "PullRequestSet.data" or in the
            commits from "FilterCommitsRequest.data".
          type: object
      required:
      - users
    PullRequest:
      description: Details of a pull request.
      example:
        # https://github.com/src-d/go-git/pull/1152
        repository: github.com/src-d/go-git
        number: 1152
        title: 'Fix an edge case when fetching remotes with unrelated incomplete history.
          Fixes #1151'
        size_added: 37
        size_removed: 1
        files_changed: 2
        created: 2019-05-17T01:14:00Z
        updated: 2019-09-18T10:49:00Z
        comments: 1
        commits: 2
        review_comments: 0
        review_requested: false
        stage: wip
        participants:
        - id: github.com/NonLogicalDev
          status: author
        - id: github.com/mcuadros
          status: commenter
      properties:
        repository:
          description: PR is/was open in this repository.
          type: string
        number:
          description: PR number.
          type: integer
        title:
          description: Title of the PR.
          type: string
        size_added:
          description: Overall number of lines added.
          type: integer
        size_removed:
          description: Overall number of lines removed.
          type: integer
        files_changed:
          description: Number of files changed in this PR.
          type: integer
        created:
          description: When this PR was created.
          format: date-time
          type: string
        updated:
          description: When this PR was last updated.
          format: date-time
          type: string
        closed:
          description: When this PR was last closed.
          format: date-time
          type: string
        comments:
          description: Number of *regular* (not review) comments in this PR.
          type: integer
        commits:
          description: Number of commits in this PR.
          type: integer
        review_requested:
          description: Value indicating whether somebody requested a review of this
            PR.
          type: boolean
        review_comments:
          description: Number of review comments this PR received.
          type: integer
        merged:
          description: When this PR was merged.
          format: date-time
          type: string
        released:
          description: When this PR was released.
          format: date-time
          type: string
        release_url:
          description: URL of the earliest release that includes this merged PR.
          format: url
          type: string
        stage:
          $ref: '#/components/schemas/PullRequestPipelineStage'
        properties:
          description: List of the PR properties triggered in the given time window.
            There may be extra properties that were not originally requested.
          items:
            $ref: '#/components/schemas/PullRequestProperty'
          type: array
        participants:
          description: List of developers related to this PR, always including the
            author.
          items:
            $ref: '#/components/schemas/PullRequestParticipant'
          type: array
      required:
      - comments
      - commits
      - created
      - files_changed
      - number
      - participants
      - repository
      - review_comments
      - review_requested
      - size_added
      - size_removed
      - stage
      - title
      - updated
      type: object
    PullRequestParticipant:
      description: Developer and their role in the PR.
      properties:
        id:
          description: Person identifier.
          example: github.com/vmarkovtsev
          type: string
        status:
          items:
            enum:
            - author
            - reviewer
            - commit_author
            - commit_committer
            - commenter
            - merger
            - releaser
            type: string
          type: array
      required:
      - id
      - status
    PullRequestWith:
      description: 'Triage PRs by various developer participation. The aggregation is OR between
        the participation groups and OR within each group. For example, if our request is
        {"author": ["github.com/vmarkovtsev"], "reviewer": ["github.com/gkwillie", "github.com/mcuadros"]}
        then the matched PRs will have @vmarkovtsev as the author or either @gkwillie or @mcuadros
        as the reviewers.'
      example:
        author:
        - github.com/vmarkovtsev
      properties:
        author:
          $ref: '#/components/schemas/DeveloperSet'
        reviewer:
          $ref: '#/components/schemas/DeveloperSet'
        commit_author:
          $ref: '#/components/schemas/DeveloperSet'
        commit_committer:
          $ref: '#/components/schemas/DeveloperSet'
        commenter:
          $ref: '#/components/schemas/DeveloperSet'
        merger:
          $ref: '#/components/schemas/DeveloperSet'
        releaser:
          $ref: '#/components/schemas/DeveloperSet'
      type: object
    FilterCommitsRequest:
      description: Filter for listing commits.
      example:
        account: 1
        date_from: 2000-01-23
        date_to: 2020-05-23
        in:
        - '{1}'
      allOf:
      - $ref: '#/components/schemas/CommitFilter'
      - properties:
          property:
            description: Main trait of the commits - the core of the filter.
            enum:
            - bypassing_prs
            type: string
        required:
        - property
        type: object
    CommitsGroupedByTime:
      description: Lists of commits grouped by date.
      example:
        include:
          users:
            github.com/gkwillie:
              avatar: https://avatars0.githubusercontent.com/u/60340680?v=4
        data:
        - date: 2000-01-23
          commits:
          - repository: github.com/athenianco/athenian-api
            hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
            author:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            committer:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            message: 'Bump version: 0.0.42 → 0.0.43'
            size_added: 1
            size_removed: 1
            files_changed: 1
          - repository: github.com/athenianco/athenian-api
            hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
            author:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            committer:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            message: 'Bump version: 0.0.42 → 0.0.43'
            size_added: 1
            size_removed: 1
            files_changed: 1
        - date: 2000-01-23
          commits:
          - repository: github.com/athenianco/athenian-api
            hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
            author:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            committer:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            message: 'Bump version: 0.0.42 → 0.0.43'
            size_added: 1
            size_removed: 1
            files_changed: 1
          - repository: github.com/athenianco/athenian-api
            hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
            author:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            committer:
              login: github.com/gkwillie
              name: Groundskeeper Willie
              email: bot@athenian.co
              timestamp: 2020-02-25T14:27:21Z
            message: 'Bump version: 0.0.42 → 0.0.43'
            size_added: 1
            size_removed: 1
            files_changed: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommitGroupForFilterCommitsRequest'
          type: array
        include:
          $ref: '#/components/schemas/IncludedNativeUsers'
      required:
      - data
      - include
      type: object
    CommitGroupForFilterCommitsRequest:
      description: List of commits that were committed starting from a specific time
        and ending at +granularity.
      example:
        date: 2000-01-23
        commits:
        - repository: github.com/athenianco/athenian-api
          hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
          author:
            login: github.com/gkwillie
            name: Groundskeeper Willie
            email: bot@athenian.co
            timestamp: 2020-02-25T14:27:21Z
          committer:
            login: github.com/gkwillie
            name: Groundskeeper Willie
            email: bot@athenian.co
            timestamp: 2020-02-25T14:27:21Z
          message: 'Bump version: 0.0.42 → 0.0.43'
          size_added: 1
          size_removed: 1
          files_changed: 1
        - repository: github.com/athenianco/athenian-api
          hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
          author:
            login: github.com/gkwillie
            name: Groundskeeper Willie
            email: bot@athenian.co
            timestamp: 2020-02-25T14:27:21Z
          committer:
            login: github.com/gkwillie
            name: Groundskeeper Willie
            email: bot@athenian.co
            timestamp: 2020-02-25T14:27:21Z
          message: 'Bump version: 0.0.42 → 0.0.43'
          size_added: 1
          size_removed: 1
          files_changed: 1
      properties:
        date:
          description: Commits were pushed beginning with this date. They were not
            pushed later than +granularity.
          format: date
          type: string
        commits:
          items:
            $ref: '#/components/schemas/Commit'
          type: array
      required:
      - commits
      - date
      type: object
    Commit:
      description: Information about a commit.
      example:
        repository: github.com/athenianco/athenian-api
        hash: 79f0bccb856b35ef08ec93da2ff5585da4d2e50e
        author:
          login: github.com/gkwillie
          name: Groundskeeper Willie
          email: bot@athenian.co
          timestamp: 2020-02-25T14:27:21Z
        committer:
          login: github.com/gkwillie
          name: Groundskeeper Willie
          email: bot@athenian.co
          timestamp: 2020-02-25T14:27:21Z
        message: 'Bump version: 0.0.42 → 0.0.43'
        size_added: 1
        size_removed: 1
        files_changed: 1
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryID'
        hash:
          description: Git commit hash.
          type: string
        author:
          $ref: '#/components/schemas/CommitSignature'
        committer:
          $ref: '#/components/schemas/CommitSignature'
        message:
          description: Commit message.
          type: string
        size_added:
          description: Overall number of lines added.
          type: integer
        size_removed:
          description: Overall number of lines removed.
          type: integer
        files_changed:
          description: Number of files changed in this PR.
          type: integer
      required:
      - author
      - committer
      - files_changed
      - hash
      - message
      - repository
      - size_added
      - size_removed
      type: object
    CommitSignature:
      description: Git commit signature. It is guaranteed that `login` and/or `name`&`email`
        are present.
      example:
        login: github.com/vmarkovtsev
        name: Vadim Markovtsev
        email: vadim@athenian.co
        timestamp: 2020-02-25T14:27:21Z
      properties:
        login:
          $ref: '#/components/schemas/DeveloperID'
        name:
          description: Git signature name.
          type: string
        email:
          description: Git signature email.
          type: string
        timestamp:
          description: When the corresponding action happened.
          format: date-time
          type: string
      required:
      - timestamp
      type: object
    CommitFilter:
      description: Filter for committed code.
      example:
        account: 1
        date_from: 2020-01-01
        date_to: 2020-03-01
        granularity: day
        in:
        - '{1}'
        with_author:
        - github.com/vmarkovtsev
      properties:
        account:
          description: Session account ID.
          type: integer
        date_from:
          description: Commits must be made later than or equal to this date.
          format: date
          type: string
        date_to:
          description: Commits must be made earlier than or equal to this date.
          format: date
          type: string
        granularity:
          $ref: '#/components/schemas/Granularity'
        in:
          $ref: '#/components/schemas/RepositorySet'
        with_author:
          $ref: '#/components/schemas/DeveloperSet'
        with_committer:
          $ref: '#/components/schemas/DeveloperSet'
      required:
      - account
      - date_from
      - date_to
      - granularity
      - in
      type: object
    MeasuredCodeBypassingPRs:
      description: Statistics about code pushed outside of pull requests.
      example:
      - date: 2020-01-23
        bypassed_commits: 1
        bypassed_lines: 20
        total_commits: 2
        total_lines: 50
      - date: 2020-01-24
        bypassed_commits: 2
        bypassed_lines: 30
        total_commits: 3
        total_lines: 60
      items:
        $ref: '#/components/schemas/CodeBypassingPRsMeasurement'
      type: array
    CodeBypassingPRsMeasurement:
      description: Statistics about code pushed outside of pull requests in a certain
        time interval.
      example:
        date: 2020-01-23
        bypassed_commits: 1
        bypassed_lines: 20
        total_commits: 2
        total_lines: 50
      properties:
        date:
          description: Commits were pushed beginning with this date. They were not
            pushed later than +granularity.
          format: date
          type: string
        bypassed_commits:
          description: Number of commits that bypassed PRs in the time interval.
          type: integer
        bypassed_lines:
          description: Number of changed (added + removed) lines that bypassed PRs
            in the time interval.
          type: integer
        total_commits:
          description: Overall number of commits in the time interval.
          type: integer
        total_lines:
          description: Overall number of changed (added + removed) lines in the time
            interval.
          type: integer
      required:
      - bypassed_commits
      - bypassed_lines
      - date
      - total_commits
      - total_lines
      type: object
