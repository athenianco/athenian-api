from datetime import datetime, timedelta, timezone

import morcilla
import numpy as np
import pandas as pd
from pandas.testing import assert_frame_equal
import pytest
import sqlalchemy as sa
from sqlalchemy import and_, delete, func, insert, select

from athenian.api.defer import wait_deferred, with_defer
from athenian.api.internal.account import get_metadata_account_ids
from athenian.api.internal.miners.filters import JIRAFilter, LabelFilter
from athenian.api.internal.miners.github.deployment import (
    deployment_facts_extract_mentioned_people,
    hide_outlier_first_deployments,
    mine_deployments,
)
from athenian.api.internal.miners.github.release_mine import mine_releases
from athenian.api.internal.miners.types import DeploymentConclusion, DeploymentFacts
from athenian.api.internal.settings import LogicalRepositorySettings
from athenian.api.models.metadata.github import Release
from athenian.api.models.persistentdata.models import (
    DeployedComponent,
    DeployedLabel,
    DeploymentNotification,
    ReleaseNotification,
)
from athenian.api.models.precomputed.models import (
    GitHubCommitDeployment,
    GitHubDeploymentFacts,
    GitHubPullRequestDeployment,
    GitHubReleaseDeployment,
)
from tests.conftest import get_default_branches, get_release_match_setting_tag
from tests.testutils.db import assert_missing_row, count, models_insert
from tests.testutils.factory.persistentdata import (
    DeployedComponentFactory,
    DeploymentNotificationFactory,
)
from tests.testutils.time import dt


@with_defer
async def test_mine_deployments_from_scratch(
    sample_deployments,
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    await mine_releases(
        ["src-d/go-git"],
        {},
        branches,
        default_branches,
        time_from,
        time_to,
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
        with_avatars=False,
        with_pr_titles=False,
        with_deployments=False,
    )
    await wait_deferred()
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    _validate_deployments(deps, 9, True)
    deployment_facts_extract_mentioned_people(deps)
    await wait_deferred()
    commits = await pdb.fetch_all(select([GitHubCommitDeployment]))
    assert len(commits) == 4684


@with_defer
async def test_mine_deployments_middle(
    sample_deployments,
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2017, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    await mine_releases(
        ["src-d/go-git"],
        {},
        branches,
        default_branches,
        datetime(2016, 1, 1, tzinfo=timezone.utc),
        time_to,
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
        with_avatars=False,
        with_pr_titles=False,
        with_deployments=False,
    )
    await wait_deferred()
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    _validate_deployments(deps, 7, False)
    deployment_facts_extract_mentioned_people(deps)


@with_defer
async def test_mine_deployments_append(
    sample_deployments,
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2019, 11, 2, tzinfo=timezone.utc)
    await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    await wait_deferred()
    name = "%s_%d_%02d_%02d" % ("production", 2019, 11, 2)
    await rdb.execute(
        insert(DeploymentNotification).values(
            dict(
                account_id=1,
                name=name,
                conclusion="SUCCESS",
                environment="production",
                started_at=datetime(2019, 11, 2, tzinfo=timezone.utc),
                finished_at=datetime(2019, 11, 2, 0, 10, tzinfo=timezone.utc),
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
            ),
        ),
    )
    await rdb.execute(
        insert(DeployedComponent).values(
            dict(
                account_id=1,
                deployment_name=name,
                repository_node_id=40550,
                reference="v4.13.1",
                resolved_commit_node_id=2755244,
                created_at=datetime.now(timezone.utc),
            ),
        ),
    )
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to + timedelta(days=1),
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    await wait_deferred()
    assert len(deps.loc[name]["prs"]) == 0
    assert len(deps.loc[name]["releases"]) == 0
    await _validate_deployed_prs(pdb)


@with_defer
async def test_mine_deployments_insert_middle(
    sample_deployments,
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2018, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2018, 12, 31, tzinfo=timezone.utc)
    await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    await wait_deferred()
    time_from = datetime(2015, 12, 31, tzinfo=timezone.utc)
    time_to = datetime(2019, 12, 31, tzinfo=timezone.utc)
    await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    await wait_deferred()
    await _validate_deployed_prs(pdb)


@with_defer
async def test_mine_deployments_only_failed(
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    await rdb.execute(delete(DeployedLabel))
    await rdb.execute(delete(DeployedComponent))
    await rdb.execute(delete(DeploymentNotification))
    for year, month, day, conclusion, tag, commit in ((2018, 1, 10, "FAILURE", "4.0.0", 2757510),):
        name = "production_%d_%02d_%02d" % (year, month, day)
        await rdb.execute(
            insert(DeploymentNotification).values(
                dict(
                    account_id=1,
                    name=name,
                    conclusion=conclusion,
                    environment="production",
                    started_at=datetime(year, month, day, tzinfo=timezone.utc),
                    finished_at=datetime(year, month, day, 0, 10, tzinfo=timezone.utc),
                    created_at=datetime.now(timezone.utc),
                    updated_at=datetime.now(timezone.utc),
                ),
            ),
        )
        await rdb.execute(
            insert(DeployedComponent).values(
                dict(
                    account_id=1,
                    deployment_name=name,
                    repository_node_id=40550,
                    reference=tag,
                    resolved_commit_node_id=commit,
                    created_at=datetime.now(timezone.utc),
                ),
            ),
        )
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2019, 11, 2, tzinfo=timezone.utc)
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    await wait_deferred()
    assert len(deps) == 1
    assert len(deps.iloc[0]["prs"]) == 340
    rows = await pdb.fetch_all(select([GitHubPullRequestDeployment]))
    assert len(rows) == 340


@with_defer
async def test_mine_deployments_logical(
    sample_deployments,
    release_match_setting_tag_logical,
    branches,
    default_branches,
    prefixer,
    logical_settings_full,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    await mine_releases(
        ["src-d/go-git/alpha", "src-d/go-git/beta", "src-d/go-git"],
        {},
        branches,
        default_branches,
        time_from,
        time_to,
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_logical,
        logical_settings_full,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
        with_avatars=False,
        with_pr_titles=False,
        with_deployments=False,
    )
    await wait_deferred()
    deps = await mine_deployments(
        ["src-d/go-git/alpha"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_logical,
        logical_settings_full,
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    assert len(deps) == 18
    physical_count = alpha_count = beta_count = beta_releases = 0
    for deployment_name, components, releases in zip(
        deps.index.values,
        deps["components"].values,
        deps["releases"].values,
    ):
        component_repos = components[DeployedComponent.repository_full_name].unique()
        release_repos = (
            releases.index.get_level_values(1).unique()
            if not releases.empty
            else np.array([], dtype=object)
        )
        has_logical = False
        if "2016" in deployment_name or "2019" in deployment_name:
            has_logical = True
            alpha_count += 1
            assert "src-d/go-git/alpha" in component_repos, deployment_name
            assert "src-d/go-git" not in component_repos, deployment_name
            assert "src-d/go-git/alpha" in release_repos, deployment_name
            assert "src-d/go-git" not in release_repos, deployment_name
        if "prod" in deployment_name or "2019" in deployment_name:
            has_logical = True
            beta_count += 1
            assert "src-d/go-git/beta" in component_repos, deployment_name
            assert "src-d/go-git" not in component_repos, deployment_name
            beta_releases += "src-d/go-git/beta" in release_repos
            assert "src-d/go-git" not in release_repos, deployment_name
        if not has_logical:
            physical_count += 1
            assert component_repos.tolist() == ["src-d/go-git"]
            assert release_repos.tolist() in ([], ["src-d/go-git"])

    assert alpha_count == 6
    assert beta_count == 10
    assert physical_count == 6
    assert beta_releases == 6


@with_defer
async def test_mine_deployments_no_prs(
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2016, 1, 1, tzinfo=timezone.utc)
    await rdb.execute(delete(DeployedLabel))
    await rdb.execute(delete(DeployedComponent))
    await rdb.execute(delete(DeploymentNotification))
    await rdb.execute(
        insert(DeploymentNotification).values(
            dict(
                account_id=1,
                name="DeployWithoutPRs",
                conclusion="SUCCESS",
                environment="production",
                started_at=datetime(2015, 5, 21, tzinfo=timezone.utc),
                finished_at=datetime(2015, 5, 21, 0, 10, tzinfo=timezone.utc),
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
            ),
        ),
    )
    await rdb.execute(
        insert(DeployedComponent).values(
            dict(
                account_id=1,
                deployment_name="DeployWithoutPRs",
                repository_node_id=40550,
                reference="35b585759cbf29f8ec428ef89da20705d59f99ec",
                resolved_commit_node_id=2755715,
                created_at=datetime.now(timezone.utc),
            ),
        ),
    )
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    assert len(deps) == 1
    assert len(deps.iloc[0]["prs"]) == 0


@with_defer
async def test_mine_deployments_no_release_facts(
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    assert len(deps) == 1
    assert deps.iloc[0].name == "Dummy deployment"
    deployment_facts_extract_mentioned_people(deps)
    obj = deps["releases"].iloc[0].to_dict()
    for val in obj.values():
        if isinstance(val, dict):
            for r, arr in val.items():
                if isinstance(arr, np.ndarray):
                    val[r] = arr.tolist()
    assert obj == {
        "commit_authors": {
            (41475, "src-d/go-git"): [39789, 40187],
            (41474, "src-d/go-git"): [39771, 39789, 39887, 40025, 40292],
            (41473, "src-d/go-git"): [
                39789,
                39811,
                39828,
                39868,
                39890,
                39974,
                39994,
                40083,
                40114,
                40146,
                40158,
                40187,
                40410,
            ],
            (41472, "src-d/go-git"): [
                39789,
                39849,
                39974,
                40020,
                40138,
                40167,
                40243,
                40298,
                40375,
            ],
            (41471, "src-d/go-git"): [39789, 39926, 40020, 40039, 40374],
            (41470, "src-d/go-git"): [39789, 39849],
            (41469, "src-d/go-git"): [39789, 39828, 39849, 40328],
            (41468, "src-d/go-git"): [39789, 40070],
            (41467, "src-d/go-git"): [
                39789,
                39798,
                39913,
                39926,
                40031,
                40032,
                40044,
                40061,
                40070,
                40228,
                40261,
                40414,
            ],
            (41485, "src-d/go-git"): [
                39764,
                39789,
                39828,
                39849,
                39900,
                39926,
                39968,
                40070,
                40095,
                40181,
                40186,
                40189,
                40374,
                40377,
                40410,
            ],
            (41484, "src-d/go-git"): [39789, 39849, 39863, 40070, 40076, 40197, 40414],
            (41483, "src-d/go-git"): [
                39789,
                39849,
                39900,
                39926,
                39957,
                40165,
                40266,
                40345,
                40414,
            ],
            (41482, "src-d/go-git"): [39789, 39957, 40070, 40135],
            (41481, "src-d/go-git"): [39788, 39789, 39849, 39926, 40135],
            (41480, "src-d/go-git"): [39789, 39804, 39849],
            (41479, "src-d/go-git"): [39789, 39849, 40175, 40374],
            (41478, "src-d/go-git"): [39789, 39845, 40068, 40093],
            (41477, "src-d/go-git"): [39788, 39789, 39804, 39849, 39881, 39896, 39926, 40239],
            (41476, "src-d/go-git"): [39789, 39874, 39881, 40038, 40093, 40287],
            (41517, "src-d/go-git"): [39789, 39814, 39849, 40090, 40283, 40288],
            (41519, "src-d/go-git"): [39789, 39800, 39849],
            (41518, "src-d/go-git"): [
                39789,
                39844,
                39849,
                39926,
                39936,
                39957,
                39962,
                39968,
                39980,
                39989,
                40051,
                40052,
                40059,
                40109,
                40170,
                40175,
                40197,
                40230,
                40239,
                40246,
                40283,
                40293,
                40319,
                40374,
                40392,
            ],
            (41514, "src-d/go-git"): [39789, 39957, 40239],
            (41513, "src-d/go-git"): [
                39789,
                39799,
                39818,
                39949,
                39957,
                40070,
                40123,
                40239,
                40304,
                40374,
            ],
            (41516, "src-d/go-git"): [39789, 39926, 40070, 40239],
            (41515, "src-d/go-git"): [39789, 39891, 39926, 40045, 40070],
            (41512, "src-d/go-git"): [39789, 39926, 40070, 40239, 40317],
            (41511, "src-d/go-git"): [
                39789,
                39800,
                39891,
                39906,
                39926,
                40070,
                40073,
                40093,
                40175,
                40284,
                40385,
                40418,
            ],
            (41510, "src-d/go-git"): [39789],
            (41509, "src-d/go-git"): [39789, 39926, 40096, 40418],
            (41508, "src-d/go-git"): [39789, 39921, 39926, 39957, 40070, 40418],
            (41506, "src-d/go-git"): [40070, 40096],
            (41505, "src-d/go-git"): [39789, 39926, 40070, 40096, 40283, 40418],
            (41503, "src-d/go-git"): [39789, 40070, 40283, 40418],
            (41502, "src-d/go-git"): [39789, 40070, 40303],
            (41501, "src-d/go-git"): [39789, 39926, 40070, 40394, 40418],
            (41507, "src-d/go-git"): [39789, 40020, 40070, 40283, 40418],
            (41496, "src-d/go-git"): [40020, 40418],
            (41495, "src-d/go-git"): [39789, 40020, 40418],
            (41500, "src-d/go-git"): [39789],
            (41499, "src-d/go-git"): [39758, 39789],
            (41498, "src-d/go-git"): [39789],
            (41497, "src-d/go-git"): [39789, 40058],
            (41490, "src-d/go-git"): [39789, 40058],
            (41488, "src-d/go-git"): [39789, 39904, 39957, 40238, 40389, 40418],
            (41487, "src-d/go-git"): [39789, 40418],
            (41486, "src-d/go-git"): [39789, 40418],
            (41494, "src-d/go-git"): [39789, 40418],
            (41493, "src-d/go-git"): [39789, 40418],
            (41492, "src-d/go-git"): [39789, 40274, 40418],
            (41491, "src-d/go-git"): [39789, 40221, 40274, 40310, 40347, 40366],
        },
        "prs_node_id": {
            (41475, "src-d/go-git"): [163398],
            (41474, "src-d/go-git"): [163375, 163377, 163378, 163380, 163395, 163396, 163397],
            (41473, "src-d/go-git"): [
                163341,
                163333,
                163334,
                163356,
                163357,
                163359,
                163360,
                163362,
                163361,
                163363,
                163364,
                163365,
                163366,
                163367,
                163368,
                163369,
                163370,
                163371,
                163346,
                163347,
                163348,
                163351,
                163372,
                163373,
                163374,
            ],
            (41472, "src-d/go-git"): [
                163318,
                163319,
                163320,
                163322,
                163324,
                163325,
                163326,
                163340,
                163342,
                163343,
                163344,
                163332,
                163336,
                163353,
                163354,
            ],
            (41471, "src-d/go-git"): [163287, 163314, 163328, 163329, 163330, 163331],
            (41470, "src-d/go-git"): [163313],
            (41469, "src-d/go-git"): [163255, 163307, 163308, 163309, 163316],
            (41468, "src-d/go-git"): [163312],
            (41467, "src-d/go-git"): [
                163304,
                163306,
                163276,
                163277,
                163278,
                163280,
                163281,
                163282,
                163285,
                163286,
                163289,
                163290,
                163292,
                163293,
                163295,
                163310,
                163311,
            ],
            (41485, "src-d/go-git"): [
                163158,
                163199,
                163200,
                163246,
                163262,
                163273,
                163272,
                163253,
                163254,
                163256,
                163257,
                163259,
                163297,
                163298,
                163299,
                163300,
                163301,
                163302,
                163303,
            ],
            (41484, "src-d/go-git"): [
                163222,
                163247,
                163242,
                163243,
                163245,
                163261,
                163263,
                163264,
                163265,
                163266,
                163268,
                163269,
            ],
            (41483, "src-d/go-git"): [
                163211,
                163223,
                163248,
                163249,
                163250,
                163251,
                163252,
                163233,
                163234,
                163235,
                163236,
                163237,
                163239,
                163240,
                163241,
            ],
            (41482, "src-d/go-git"): [163231, 163232, 163213, 163215, 163216, 163218, 163219],
            (41481, "src-d/go-git"): [163224, 163225, 163226, 163228, 163229, 163230],
            (41480, "src-d/go-git"): [163208, 163198, 163201],
            (41479, "src-d/go-git"): [163167, 163205, 163206, 163207],
            (41478, "src-d/go-git"): [163178, 163202, 163203],
            (41477, "src-d/go-git"): [163175, 163176, 163179, 163182, 163183, 163184, 163185],
            (41476, "src-d/go-git"): [163160, 163187, 163188, 163189, 163190, 163192, 163193],
            (41517, "src-d/go-git"): [
                163174,
                163157,
                163159,
                163161,
                163162,
                163164,
                163165,
                163166,
            ],
            (41519, "src-d/go-git"): [163169, 163170, 163172, 163173],
            (41518, "src-d/go-git"): [
                163027,
                163052,
                163054,
                163055,
                163056,
                163057,
                163058,
                163107,
                163108,
                163109,
                163110,
                163112,
                163096,
                163097,
                163098,
                163100,
                163099,
                163101,
                163103,
                163104,
                163105,
                163106,
                163147,
                163149,
                163150,
                163151,
                163152,
                163153,
                163154,
                163155,
                163156,
                163113,
                163114,
                163115,
                163116,
                163117,
                163118,
                163119,
                163120,
                163121,
                163122,
                163123,
                163124,
                163125,
                163126,
                163127,
                163128,
                163131,
                163132,
                163133,
                163134,
                163135,
                163136,
                163137,
                163138,
                163140,
                163141,
                163142,
                163143,
                163144,
                163146,
                163168,
            ],
            (41514, "src-d/go-git"): [163046, 163048, 163049, 163051, 163053],
            (41513, "src-d/go-git"): [
                163076,
                163090,
                163091,
                163092,
                163093,
                163094,
                163095,
                163028,
                163029,
                163030,
                163031,
                163032,
                163033,
                163034,
                163036,
                163037,
                163038,
                163039,
                163042,
                163043,
                163044,
                163045,
            ],
            (41516, "src-d/go-git"): [
                163063,
                163066,
                163067,
                163068,
                163070,
                163069,
                163072,
                163075,
                163074,
                163080,
                163081,
                163082,
                163083,
                163084,
                163085,
                163086,
                163087,
                163088,
                163089,
            ],
            (41515, "src-d/go-git"): [
                162988,
                162994,
                162996,
                163005,
                163006,
                163007,
                163008,
                163009,
                163010,
                163011,
                163012,
                163013,
                163015,
                163016,
                163059,
                163060,
                163061,
                163062,
                163064,
            ],
            (41512, "src-d/go-git"): [
                162975,
                163023,
                163025,
                163026,
                162989,
                162992,
                162993,
                162995,
                162997,
                162998,
                163000,
                163001,
                163002,
                163003,
            ],
            (41511, "src-d/go-git"): [
                163529,
                162887,
                162888,
                162889,
                162890,
                162892,
                162893,
                162894,
                162895,
                162896,
                162897,
                162898,
                162899,
                162900,
                162901,
                162903,
                162904,
                162905,
                162906,
                162908,
                162910,
                162911,
                162912,
                162913,
                162914,
                162915,
                162916,
                162918,
                162919,
                162920,
                162921,
                162922,
                162923,
                162924,
                162925,
                162926,
                162927,
                162983,
                162984,
                162985,
                162986,
                162987,
                162952,
                162956,
                162955,
                162957,
                162958,
                162959,
                162960,
                162961,
                162962,
                162963,
                162965,
                162966,
                162967,
                162968,
                162969,
                162970,
                162971,
                162973,
                162972,
                162974,
                162976,
                162977,
                162978,
                162981,
                162982,
                163018,
                163019,
                163020,
                163022,
            ],
            (41510, "src-d/go-git"): [],
            (41509, "src-d/go-git"): [
                162939,
                162940,
                162941,
                162942,
                162943,
                162944,
                162945,
                162949,
                162950,
                162946,
                162947,
                162948,
                162951,
            ],
            (41508, "src-d/go-git"): [
                163548,
                163568,
                163570,
                162928,
                162929,
                162930,
                162931,
                162932,
                162933,
                162934,
                162935,
                162936,
                162937,
                162938,
            ],
            (41506, "src-d/go-git"): [163565, 163569],
            (41505, "src-d/go-git"): [
                163511,
                163514,
                163515,
                163516,
                163517,
                163518,
                163527,
                163528,
                163530,
                163531,
                163532,
                163533,
                163534,
                163519,
                163520,
                163521,
                163522,
                163524,
                163525,
                163526,
                163537,
                163538,
                163539,
                163540,
                163541,
                163542,
                163543,
                163544,
                163545,
                163558,
                163559,
                163560,
                163561,
                163562,
                163563,
                163564,
                163566,
                163567,
                163546,
                163547,
                163549,
                163550,
                163551,
                163552,
                163553,
                163554,
                163555,
                163556,
                163557,
                163571,
            ],
            (41503, "src-d/go-git"): [163504, 163505, 163500, 163512, 163509],
            (41502, "src-d/go-git"): [163498, 163499],
            (41501, "src-d/go-git"): [
                163488,
                163481,
                163482,
                163483,
                163484,
                163485,
                163486,
                163494,
                163495,
                163497,
                163490,
                163491,
                163492,
                163493,
                163502,
                163503,
                163506,
                163507,
                163508,
            ],
            (41507, "src-d/go-git"): [
                163466,
                163464,
                163465,
                163467,
                163468,
                163469,
                163470,
                163474,
                163475,
                163478,
                163479,
                163480,
                163487,
            ],
            (41496, "src-d/go-git"): [163462, 163463],
            (41495, "src-d/go-git"): [163458, 163461, 163460],
            (41500, "src-d/go-git"): [],
            (41499, "src-d/go-git"): [163456],
            (41498, "src-d/go-git"): [],
            (41497, "src-d/go-git"): [],
            (41490, "src-d/go-git"): [163437],
            (41488, "src-d/go-git"): [163446],
            (41487, "src-d/go-git"): [163436],
            (41486, "src-d/go-git"): [],
            (41494, "src-d/go-git"): [],
            (41493, "src-d/go-git"): [],
            (41492, "src-d/go-git"): [163430],
            (41491, "src-d/go-git"): [],
        },
        "prs_number": {
            (41475, "src-d/go-git"): [1203],
            (41474, "src-d/go-git"): [1165, 1175, 1179, 1181, 1197, 1199, 1200],
            (41473, "src-d/go-git"): [
                1090,
                1096,
                1097,
                1118,
                1119,
                1121,
                1123,
                1124,
                1125,
                1126,
                1127,
                1128,
                1130,
                1131,
                1132,
                1133,
                1134,
                1136,
                1142,
                1145,
                1146,
                1154,
                1159,
                1160,
                1164,
            ],
            (41472, "src-d/go-git"): [
                1070,
                1072,
                1073,
                1076,
                1080,
                1081,
                1084,
                1088,
                1092,
                1093,
                1094,
                1095,
                1099,
                1112,
                1115,
            ],
            (41471, "src-d/go-git"): [1006, 1060, 1064, 1065, 1066, 1067],
            (41470, "src-d/go-git"): [1056],
            (41469, "src-d/go-git"): [963, 1031, 1036, 1037, 1045],
            (41468, "src-d/go-git"): [1028],
            (41467, "src-d/go-git"): [
                987,
                989,
                990,
                992,
                994,
                998,
                1000,
                1001,
                1004,
                1005,
                1008,
                1009,
                1013,
                1015,
                1019,
                1022,
                1025,
            ],
            (41485, "src-d/go-git"): [
                727,
                828,
                830,
                928,
                932,
                949,
                950,
                958,
                962,
                966,
                968,
                974,
                977,
                978,
                979,
                982,
                984,
                985,
                986,
            ],
            (41484, "src-d/go-git"): [882, 887, 921, 924, 927, 929, 933, 935, 937, 939, 941, 942],
            (41483, "src-d/go-git"): [
                862,
                885,
                888,
                892,
                896,
                898,
                899,
                902,
                904,
                905,
                906,
                907,
                910,
                916,
                920,
            ],
            (41482, "src-d/go-git"): [857, 859, 864, 869, 870, 873, 874],
            (41481, "src-d/go-git"): [845, 846, 848, 854, 855, 856],
            (41480, "src-d/go-git"): [815, 825, 833],
            (41479, "src-d/go-git"): [706, 807, 808, 810],
            (41478, "src-d/go-git"): [784, 803, 804],
            (41477, "src-d/go-git"): [778, 783, 786, 792, 794, 795, 797],
            (41476, "src-d/go-git"): [739, 754, 759, 762, 766, 769, 771],
            (41517, "src-d/go-git"): [721, 724, 731, 740, 742, 744, 749, 751],
            (41519, "src-d/go-git"): [712, 714, 716, 720],
            (41518, "src-d/go-git"): [
                534,
                577,
                579,
                580,
                582,
                583,
                584,
                585,
                586,
                587,
                588,
                608,
                609,
                610,
                613,
                615,
                616,
                617,
                626,
                631,
                632,
                633,
                638,
                640,
                641,
                643,
                646,
                647,
                649,
                650,
                651,
                652,
                653,
                655,
                656,
                657,
                658,
                659,
                660,
                661,
                663,
                664,
                665,
                666,
                667,
                668,
                669,
                672,
                674,
                675,
                677,
                680,
                686,
                687,
                688,
                690,
                695,
                696,
                697,
                698,
                700,
                710,
            ],
            (41514, "src-d/go-git"): [569, 572, 573, 576, 578],
            (41513, "src-d/go-git"): [
                501,
                522,
                526,
                527,
                531,
                532,
                533,
                536,
                538,
                540,
                542,
                543,
                544,
                546,
                552,
                554,
                555,
                558,
                563,
                564,
                565,
                567,
            ],
            (41516, "src-d/go-git"): [
                484,
                487,
                489,
                491,
                492,
                493,
                496,
                498,
                499,
                507,
                509,
                510,
                511,
                512,
                513,
                514,
                515,
                516,
                517,
            ],
            (41515, "src-d/go-git"): [
                414,
                423,
                432,
                451,
                452,
                453,
                464,
                465,
                467,
                469,
                472,
                473,
                475,
                476,
                477,
                478,
                479,
                480,
                485,
            ],
            (41512, "src-d/go-git"): [
                369,
                405,
                409,
                411,
                418,
                421,
                422,
                429,
                434,
                436,
                440,
                441,
                442,
                444,
            ],
            (41511, "src-d/go-git"): [
                139,
                248,
                250,
                251,
                252,
                258,
                259,
                262,
                263,
                265,
                266,
                267,
                268,
                269,
                270,
                273,
                276,
                277,
                278,
                282,
                283,
                284,
                285,
                286,
                287,
                288,
                289,
                292,
                293,
                294,
                295,
                296,
                297,
                299,
                300,
                302,
                303,
                305,
                314,
                316,
                319,
                320,
                324,
                331,
                333,
                334,
                336,
                337,
                339,
                344,
                346,
                347,
                355,
                356,
                360,
                361,
                363,
                364,
                365,
                366,
                367,
                368,
                374,
                375,
                381,
                384,
                388,
                394,
                395,
                398,
                400,
            ],
            (41510, "src-d/go-git"): [],
            (41509, "src-d/go-git"): [
                218,
                219,
                221,
                224,
                227,
                229,
                230,
                233,
                235,
                237,
                240,
                241,
                244,
            ],
            (41508, "src-d/go-git"): [
                178,
                190,
                192,
                200,
                201,
                204,
                205,
                207,
                209,
                210,
                212,
                213,
                214,
                215,
            ],
            (41506, "src-d/go-git"): [173, 191],
            (41505, "src-d/go-git"): [
                121,
                130,
                131,
                132,
                133,
                135,
                136,
                138,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                150,
                151,
                153,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                174,
                175,
                176,
                177,
                179,
                180,
                181,
                182,
                183,
                185,
                186,
                187,
                188,
                189,
            ],
            (41503, "src-d/go-git"): [111, 112, 118, 122, 124],
            (41502, "src-d/go-git"): [116, 117],
            (41501, "src-d/go-git"): [
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                99,
                100,
                102,
                104,
                105,
                106,
                108,
                109,
                110,
                113,
                114,
                115,
            ],
            (41507, "src-d/go-git"): [63, 64, 66, 68, 69, 70, 74, 83, 84, 87, 88, 89, 90],
            (41496, "src-d/go-git"): [58, 61],
            (41495, "src-d/go-git"): [54, 55, 56],
            (41500, "src-d/go-git"): [],
            (41499, "src-d/go-git"): [47],
            (41498, "src-d/go-git"): [],
            (41497, "src-d/go-git"): [],
            (41490, "src-d/go-git"): [20],
            (41488, "src-d/go-git"): [24],
            (41487, "src-d/go-git"): [15],
            (41486, "src-d/go-git"): [],
            (41494, "src-d/go-git"): [],
            (41493, "src-d/go-git"): [],
            (41492, "src-d/go-git"): [9],
            (41491, "src-d/go-git"): [],
        },
        "prs_additions": {
            (41475, "src-d/go-git"): [1],
            (41474, "src-d/go-git"): [129, 1, 83, 3, 5, 40, 30],
            (41473, "src-d/go-git"): [
                68,
                256,
                971,
                73,
                26,
                126,
                143,
                143,
                34,
                46,
                57,
                689,
                1043,
                41,
                961,
                4,
                61,
                28,
                82,
                47,
                42,
                26,
                10,
                62,
                1,
            ],
            (41472, "src-d/go-git"): [33, 1, 1, 19, 17, 0, 17, 87, 1, 67, 47, 4, 1, 1, 40],
            (41471, "src-d/go-git"): [1161, 27, 7, 62, 104, 85],
            (41470, "src-d/go-git"): [21],
            (41469, "src-d/go-git"): [126, 25, 73, 1, 357],
            (41468, "src-d/go-git"): [57],
            (41467, "src-d/go-git"): [
                30,
                1,
                128,
                27,
                95,
                55,
                2,
                50,
                17,
                3,
                156,
                8,
                11,
                45,
                61,
                0,
                122,
            ],
            (41485, "src-d/go-git"): [
                8983,
                19,
                54,
                662,
                43,
                111,
                69,
                66,
                64,
                2,
                15,
                1,
                14,
                1,
                271,
                168,
                9,
                3,
                42,
            ],
            (41484, "src-d/go-git"): [68, 101, 45, 9, 85, 41, 98, 36, 7, 6, 260, 131],
            (41483, "src-d/go-git"): [
                2,
                8,
                83,
                45,
                484,
                831,
                725,
                49,
                132,
                3,
                2949,
                88,
                32,
                276,
                178,
            ],
            (41482, "src-d/go-git"): [9, 39, 82, 12, 49, 2, 297],
            (41481, "src-d/go-git"): [4, 67, 73, 9, 26, 19],
            (41480, "src-d/go-git"): [62, 285, 22],
            (41479, "src-d/go-git"): [33, 23, 1, 132],
            (41478, "src-d/go-git"): [73, 507, 0],
            (41477, "src-d/go-git"): [39, 26, 48, 172, 59, 10, 19],
            (41476, "src-d/go-git"): [779, 7, 9, 12, 14, 61, 329],
            (41517, "src-d/go-git"): [25, 106, 56, 1, 2, 18, 43, 56],
            (41519, "src-d/go-git"): [19, 56, 19, 24],
            (41518, "src-d/go-git"): [
                24,
                43,
                38,
                73,
                367,
                1,
                3,
                1,
                45,
                146,
                84,
                23,
                70,
                97,
                167,
                4,
                69,
                1,
                36,
                13,
                6,
                2,
                1,
                40,
                1,
                1,
                29,
                20,
                59,
                278,
                29,
                39,
                95,
                84,
                3,
                3,
                172,
                2,
                82,
                23,
                148,
                1,
                205,
                76,
                56,
                6,
                928,
                22,
                1,
                67,
                51,
                336,
                324,
                110,
                1,
                14,
                124,
                4,
                152,
                113,
                142,
                1,
            ],
            (41514, "src-d/go-git"): [15, 277, 118, 57, 33],
            (41513, "src-d/go-git"): [
                219,
                11,
                61,
                75,
                37,
                44,
                15,
                33,
                20,
                6,
                12,
                22,
                39,
                61,
                56,
                2,
                48,
                62,
                76,
                43,
                23,
                48,
            ],
            (41516, "src-d/go-git"): [
                46,
                116,
                166,
                118,
                85,
                95,
                18,
                152,
                271,
                387,
                300,
                318,
                109,
                123,
                91,
                154,
                493,
                28,
                4,
            ],
            (41515, "src-d/go-git"): [
                2,
                36,
                266,
                6,
                1,
                1,
                31,
                23,
                95,
                76,
                35,
                3,
                42,
                49,
                0,
                61,
                32,
                51,
                205,
            ],
            (41512, "src-d/go-git"): [25, 15, 37, 35, 189, 11, 7, 758, 69, 198, 24, 56, 6, 35],
            (41511, "src-d/go-git"): [
                1546,
                637,
                109,
                19,
                873,
                71,
                110,
                1246,
                52,
                4,
                12,
                4,
                12,
                206,
                1092,
                1269,
                302,
                0,
                1,
                26,
                3,
                67,
                72,
                25,
                1,
                56,
                21,
                144,
                29,
                22,
                52,
                426,
                784,
                5,
                31,
                26,
                483,
                59,
                36,
                1,
                30,
                6,
                62,
                45,
                22,
                14,
                14,
                331,
                1288,
                483,
                93,
                68,
                35,
                41,
                22,
                205,
                142,
                38,
                201,
                151,
                45,
                114,
                10,
                559,
                68,
                117,
                1614,
                20,
                206,
                74,
                94,
            ],
            (41510, "src-d/go-git"): [],
            (41509, "src-d/go-git"): [248, 18, 32, 57, 389, 1320, 10, 3, 2, 87, 1, 1466, 32],
            (41508, "src-d/go-git"): [565, 1641, 1, 204, 20, 16, 7, 93, 15, 116, 7, 15, 19, 15],
            (41506, "src-d/go-git"): [46, 2],
            (41505, "src-d/go-git"): [
                205,
                154,
                272,
                1521,
                1004,
                270,
                512,
                0,
                65,
                482,
                465,
                466,
                819,
                484,
                1,
                759,
                15,
                3,
                493,
                11,
                12,
                164,
                637,
                175,
                580,
                402,
                692,
                139,
                23,
                37,
                8,
                30,
                6,
                14,
                1,
                352,
                1,
                272,
                293,
                86,
                1,
                240,
                79,
                474,
                974,
                283,
                13,
                27,
                109,
                1,
            ],
            (41503, "src-d/go-git"): [189, 548, 2000, 46, 31],
            (41502, "src-d/go-git"): [9, 24],
            (41501, "src-d/go-git"): [
                1069,
                2946,
                108,
                28,
                8,
                91,
                1017,
                18,
                56,
                340,
                163,
                362,
                1493,
                442,
                23,
                241,
                2,
                440,
                1,
            ],
            (41507, "src-d/go-git"): [595, 1207, 1, 324, 171, 240, 0, 1, 723, 8, 236, 408, 4],
            (41496, "src-d/go-git"): [83, 147],
            (41495, "src-d/go-git"): [1320, 6630, 498],
            (41500, "src-d/go-git"): [],
            (41499, "src-d/go-git"): [5],
            (41498, "src-d/go-git"): [],
            (41497, "src-d/go-git"): [],
            (41490, "src-d/go-git"): [274],
            (41488, "src-d/go-git"): [1],
            (41487, "src-d/go-git"): [224],
            (41486, "src-d/go-git"): [],
            (41494, "src-d/go-git"): [],
            (41493, "src-d/go-git"): [],
            (41492, "src-d/go-git"): [132],
            (41491, "src-d/go-git"): [],
        },
        "prs_deletions": {
            (41475, "src-d/go-git"): [1],
            (41474, "src-d/go-git"): [16, 1, 18, 3, 5, 49, 10],
            (41473, "src-d/go-git"): [
                2,
                7,
                0,
                1,
                4,
                56,
                49,
                105,
                9,
                19,
                4,
                0,
                0,
                33,
                6,
                6,
                63,
                51,
                37,
                0,
                49,
                2,
                11,
                11,
                1,
            ],
            (41472, "src-d/go-git"): [1, 1, 1, 1, 1, 11, 1, 2, 1, 9, 0, 1, 1, 1, 15],
            (41471, "src-d/go-git"): [8, 1, 6, 14, 17, 11],
            (41470, "src-d/go-git"): [5],
            (41469, "src-d/go-git"): [61, 1, 50, 5, 32],
            (41468, "src-d/go-git"): [19],
            (41467, "src-d/go-git"): [2, 1, 0, 1, 47, 0, 1, 0, 17, 1, 6, 1, 3, 15, 0, 56, 4],
            (41485, "src-d/go-git"): [
                2116,
                5,
                11,
                69,
                2,
                165,
                7,
                24,
                12,
                2,
                5,
                1,
                1,
                1,
                6,
                0,
                14,
                2,
                5,
            ],
            (41484, "src-d/go-git"): [0, 3, 5, 0, 1, 2, 34, 18, 0, 2, 9, 2],
            (41483, "src-d/go-git"): [1, 3, 0, 18, 387, 47, 173, 135, 32, 2, 1539, 43, 6, 53, 7],
            (41482, "src-d/go-git"): [8, 1, 94, 2, 5, 2, 9],
            (41481, "src-d/go-git"): [4, 23, 12, 10, 1, 4],
            (41480, "src-d/go-git"): [8, 7, 2],
            (41479, "src-d/go-git"): [8, 3, 0, 2],
            (41478, "src-d/go-git"): [6, 7, 0],
            (41477, "src-d/go-git"): [0, 1, 0, 9, 39, 2, 2],
            (41476, "src-d/go-git"): [38, 2, 0, 2, 83, 22, 3],
            (41517, "src-d/go-git"): [1, 13, 2, 1, 2, 8, 2, 10],
            (41519, "src-d/go-git"): [4, 12, 13, 6],
            (41518, "src-d/go-git"): [
                0,
                0,
                11,
                40,
                56,
                1,
                17,
                1,
                15,
                42,
                3,
                3,
                0,
                4,
                0,
                4,
                0,
                1,
                11,
                4,
                0,
                2,
                1,
                0,
                0,
                1,
                4,
                20,
                55,
                269,
                48,
                2,
                0,
                89,
                2,
                1,
                7,
                2,
                54,
                2,
                1,
                1,
                22,
                6,
                118,
                7,
                74,
                22,
                1,
                0,
                5,
                19,
                1,
                0,
                1,
                18,
                35,
                11,
                29,
                68,
                33,
                1,
            ],
            (41514, "src-d/go-git"): [10, 130, 6, 13, 6],
            (41513, "src-d/go-git"): [
                81,
                8,
                2,
                2,
                39,
                15,
                7,
                1,
                6,
                0,
                4,
                1,
                0,
                1,
                38,
                2,
                0,
                12,
                24,
                11,
                1,
                3,
            ],
            (41516, "src-d/go-git"): [
                1,
                23,
                41,
                47,
                16,
                51,
                0,
                171,
                271,
                42,
                66,
                138,
                6,
                2,
                89,
                113,
                93,
                1,
                3,
            ],
            (41515, "src-d/go-git"): [
                2,
                3,
                77,
                10,
                1,
                1,
                21,
                18,
                12,
                17,
                41,
                2,
                23,
                7,
                5,
                36,
                3,
                16,
                109,
            ],
            (41512, "src-d/go-git"): [31, 14, 15, 1, 39, 11, 5, 0, 25, 27, 1, 115, 6, 7],
            (41511, "src-d/go-git"): [
                0,
                834,
                2,
                17,
                0,
                10,
                56,
                13,
                54,
                18,
                5,
                45,
                1,
                14,
                131,
                536,
                81,
                1900,
                1,
                3,
                3,
                66,
                9,
                1,
                0,
                11,
                16,
                98,
                2,
                16,
                42,
                43,
                283,
                5,
                51,
                2,
                483,
                7,
                2,
                1,
                7,
                1,
                0,
                3,
                6,
                14,
                8,
                173,
                292,
                58,
                2,
                23,
                9,
                13,
                21,
                4,
                9,
                37,
                62,
                22,
                1,
                52,
                0,
                54,
                0,
                0,
                1,
                4,
                2,
                0,
                441,
            ],
            (41510, "src-d/go-git"): [],
            (41509, "src-d/go-git"): [8, 7, 8, 5, 98, 345, 10, 3, 2, 62, 1, 1004, 32],
            (41508, "src-d/go-git"): [33, 308, 1, 28, 5, 2, 1, 26, 3, 127, 0, 14, 5, 3],
            (41506, "src-d/go-git"): [1183, 2],
            (41505, "src-d/go-git"): [
                77,
                51,
                15,
                1400,
                0,
                0,
                240,
                0,
                14,
                523,
                532,
                0,
                474,
                333,
                0,
                0,
                3,
                1,
                105,
                8,
                32,
                42,
                0,
                58,
                67,
                4,
                62,
                76,
                31,
                1,
                1,
                27,
                9,
                0,
                1,
                25,
                1,
                37,
                543,
                16,
                1,
                1,
                133,
                112,
                771,
                273,
                31,
                24,
                9,
                4,
            ],
            (41503, "src-d/go-git"): [190, 730, 1933, 2, 3],
            (41502, "src-d/go-git"): [1, 1],
            (41501, "src-d/go-git"): [
                0,
                636,
                115,
                0,
                0,
                52,
                54,
                0,
                24,
                315,
                52,
                78,
                34,
                12,
                22,
                94,
                1,
                119,
                0,
            ],
            (41507, "src-d/go-git"): [1, 2, 1, 8, 140, 4, 598, 1, 417, 2, 159, 349, 0],
            (41496, "src-d/go-git"): [1, 12],
            (41495, "src-d/go-git"): [0, 924, 9],
            (41500, "src-d/go-git"): [],
            (41499, "src-d/go-git"): [6],
            (41498, "src-d/go-git"): [],
            (41497, "src-d/go-git"): [],
            (41490, "src-d/go-git"): [101],
            (41488, "src-d/go-git"): [1],
            (41487, "src-d/go-git"): [17],
            (41486, "src-d/go-git"): [],
            (41494, "src-d/go-git"): [],
            (41493, "src-d/go-git"): [],
            (41492, "src-d/go-git"): [196],
            (41491, "src-d/go-git"): [],
        },
        "prs_user_node_id": {
            (41475, "src-d/go-git"): [40187],
            (41474, "src-d/go-git"): [40292, 40025, 39887, 39771, 40152, 39789, 39789],
            (41473, "src-d/go-git"): [
                39890,
                39974,
                39974,
                39828,
                39828,
                39828,
                39868,
                39868,
                39868,
                39868,
                40187,
                39828,
                39868,
                39789,
                39828,
                39828,
                39828,
                39828,
                40114,
                40146,
                40410,
                39994,
                40083,
                40410,
                40158,
            ],
            (41472, "src-d/go-git"): [
                40375,
                40243,
                40243,
                39849,
                39849,
                40021,
                40020,
                39982,
                40298,
                39849,
                40298,
                40298,
                39974,
                40138,
                39789,
            ],
            (41471, "src-d/go-git"): [39789, 40374, 40039, 40020, 40374, 39926],
            (41470, "src-d/go-git"): [39849],
            (41469, "src-d/go-git"): [39828, 39849, 39849, 40328, 40189],
            (41468, "src-d/go-git"): [40070],
            (41467, "src-d/go-git"): [
                40061,
                40031,
                40228,
                40261,
                39913,
                39789,
                40070,
                40044,
                39798,
                40044,
                40070,
                40070,
                40228,
                40414,
                39913,
                39926,
                39789,
            ],
            (41485, "src-d/go-git"): [
                39968,
                40186,
                40410,
                39900,
                39916,
                40189,
                40189,
                40189,
                39849,
                40095,
                40070,
                39764,
                39828,
                40377,
                40181,
                40374,
                39789,
                39789,
                39789,
            ],
            (41484, "src-d/go-git"): [
                39863,
                39757,
                39849,
                40414,
                39849,
                39849,
                40189,
                39849,
                40076,
                40197,
                39849,
                39849,
            ],
            (41483, "src-d/go-git"): [
                40165,
                40266,
                40345,
                39849,
                39957,
                39849,
                39957,
                39849,
                39849,
                39926,
                39957,
                39957,
                40414,
                39849,
                39900,
            ],
            (41482, "src-d/go-git"): [39957, 40107, 40070, 40135, 39789, 40070, 40070],
            (41481, "src-d/go-git"): [40135, 40135, 39788, 39926, 39849, 40189],
            (41480, "src-d/go-git"): [40189, 39804, 39849],
            (41479, "src-d/go-git"): [40175, 40374, 39849, 39849],
            (41478, "src-d/go-git"): [40093, 39845, 40068],
            (41477, "src-d/go-git"): [39896, 39804, 39789, 39926, 39849, 39881, 39788],
            (41476, "src-d/go-git"): [39789, 39881, 40287, 40038, 40093, 40294, 39874],
            (41517, "src-d/go-git"): [40090, 39849, 39849, 40283, 40288, 39849, 0, 39789],
            (41519, "src-d/go-git"): [39849, 39800, 39849, 39849],
            (41518, "src-d/go-git"): [
                40293,
                40059,
                39957,
                39957,
                39957,
                40246,
                39957,
                40230,
                40374,
                40374,
                39957,
                40052,
                40319,
                40374,
                40319,
                40109,
                40319,
                40109,
                40239,
                40374,
                40374,
                40170,
                40051,
                39962,
                39844,
                39989,
                39789,
                40283,
                39789,
                39789,
                39957,
                40283,
                40319,
                39789,
                40319,
                39926,
                40319,
                40283,
                40175,
                40283,
                40319,
                40239,
                40374,
                40374,
                40283,
                39936,
                40374,
                40283,
                40283,
                40319,
                39968,
                39789,
                40319,
                39980,
                40319,
                39789,
                40319,
                40283,
                39926,
                39849,
                39849,
                40392,
            ],
            (41514, "src-d/go-git"): [39957, 39789, 40239, 39789, 39957],
            (41513, "src-d/go-git"): [
                40070,
                39799,
                40123,
                40374,
                39789,
                39789,
                39818,
                39818,
                40421,
                39818,
                39818,
                39957,
                39957,
                40239,
                39818,
                40374,
                39789,
                40239,
                39957,
                40374,
                40374,
                40374,
            ],
            (41516, "src-d/go-git"): [
                40239,
                39789,
                39789,
                40070,
                39926,
                39789,
                39912,
                39789,
                39789,
                39789,
                39789,
                40070,
                39789,
                39789,
                39789,
                40070,
                40070,
                40070,
                40070,
            ],
            (41515, "src-d/go-git"): [
                40045,
                40070,
                39926,
                40070,
                39891,
                40070,
                40070,
                40070,
                40070,
                39789,
                40070,
                39891,
                39789,
                40070,
                39891,
                39789,
                39789,
                39789,
                39789,
            ],
            (41512, "src-d/go-git"): [
                40070,
                40317,
                40070,
                39926,
                40070,
                40070,
                40070,
                40336,
                40239,
                39789,
                39926,
                39789,
                39926,
                40336,
            ],
            (41511, "src-d/go-git"): [
                40175,
                39789,
                39789,
                40385,
                40418,
                39926,
                40070,
                40418,
                40070,
                40418,
                40418,
                40418,
                40418,
                40070,
                39789,
                40418,
                40418,
                39926,
                39926,
                39789,
                39789,
                39926,
                40418,
                39926,
                39926,
                39926,
                39926,
                39926,
                39926,
                39926,
                39926,
                39926,
                40418,
                39926,
                40418,
                40284,
                39926,
                40093,
                39912,
                39906,
                39926,
                39912,
                39926,
                39800,
                39891,
                39891,
                40073,
                39926,
                39789,
                39789,
                39789,
                39789,
                39789,
                39789,
                40070,
                39789,
                40070,
                39789,
                40070,
                40070,
                40070,
                40070,
                39926,
                39789,
                39789,
                40070,
                39926,
                39926,
                39789,
                39789,
                39926,
            ],
            (41510, "src-d/go-git"): [],
            (41509, "src-d/go-git"): [
                39926,
                39926,
                39926,
                40418,
                39789,
                39789,
                40096,
                40096,
                40096,
                39789,
                40096,
                40418,
                40096,
            ],
            (41508, "src-d/go-git"): [
                40070,
                40070,
                39957,
                39926,
                39926,
                39789,
                40070,
                39789,
                39789,
                39921,
                39926,
                40418,
                39926,
                40070,
            ],
            (41506, "src-d/go-git"): [40096, 40070],
            (41505, "src-d/go-git"): [
                40283,
                39789,
                39926,
                40070,
                40418,
                39926,
                40070,
                40418,
                39789,
                40070,
                40070,
                39789,
                39789,
                40070,
                40070,
                40070,
                39789,
                40070,
                39789,
                40070,
                40070,
                39789,
                39926,
                40070,
                39789,
                40070,
                40070,
                39789,
                40070,
                40070,
                40070,
                40070,
                40070,
                40070,
                40070,
                39926,
                40096,
                39789,
                39789,
                39789,
                40070,
                39789,
                39789,
                39926,
                40070,
                40070,
                39926,
                40070,
                39926,
                39789,
            ],
            (41503, "src-d/go-git"): [40283, 39789, 39789, 40070, 40418],
            (41502, "src-d/go-git"): [40303, 40070],
            (41501, "src-d/go-git"): [
                39789,
                40418,
                40070,
                40070,
                40070,
                40418,
                40070,
                40070,
                39789,
                39789,
                40070,
                39789,
                40418,
                39789,
                40394,
                40070,
                39926,
                40070,
                39926,
            ],
            (41507, "src-d/go-git"): [
                40418,
                40418,
                40020,
                39791,
                40070,
                40070,
                40070,
                40283,
                40418,
                40418,
                39789,
                40418,
                40070,
            ],
            (41496, "src-d/go-git"): [40020, 40418],
            (41495, "src-d/go-git"): [40020, 40418, 40020],
            (41500, "src-d/go-git"): [],
            (41499, "src-d/go-git"): [39758],
            (41498, "src-d/go-git"): [],
            (41497, "src-d/go-git"): [],
            (41490, "src-d/go-git"): [40058],
            (41488, "src-d/go-git"): [40389],
            (41487, "src-d/go-git"): [40418],
            (41486, "src-d/go-git"): [],
            (41494, "src-d/go-git"): [],
            (41493, "src-d/go-git"): [],
            (41492, "src-d/go-git"): [39789],
            (41491, "src-d/go-git"): [],
        },
        "prs_title": {
            (41475, "src-d/go-git"): [
                "worktree: force convert to int64 to support 32bit os. Fix #1202",
            ],
            (41474, "src-d/go-git"): [
                "Remote: add Prune option to PushOptions",
                "config: added missing dot.",
                "Worktree: improve build index performance.",
                "*: fix typos in comments",
                "Make http.AuthMethod setAuth public. Fixes #1196",
                "*: code quality improvements",
                "*: go module update",
            ],
            (41473, "src-d/go-git"): [
                "ssh: leverage proxy from environment",
                "Add merge base command",
                "Create merge-base feature",
                "plumbing: object, Fix tag message decoding",
                "plumbing: idxfile, avoid unnecessary building of reverse offset/hash map",
                "plumbing: packfile, apply small object reading optimization also for delta"
                " objects",
                "filesystem: ObjectStorage, MaxOpenDescriptors option",
                "plumbing: packfile/scanner, readability/performance improvements, zlib pooling",
                "plumbing: TreeWalker performance improvement, bufio pool for objects",
                "plumbing: format/index perf, buffered reads, reflection removal",
                "plumbing: object/{commit,tag} add EncodeWithoutSignature, Implement #1116",
                "plumbing: format/commitgraph, add APIs for reading and writing commit-graph"
                " files",
                "plumbing: format/gitattributes support",
                "go modules update",
                "plumbing: object, add APIs for traversing over commit graphs",
                "plumbing: format/commitgraph, clean up error handling",
                "plumbing: format/commitgraph, rename structs/fields to follow the terms used by"
                " git more closely",
                "plumbing: format/idxfile, avoid creating temporary buffers to decode integers",
                "git : allows to create a Remote without a Repository",
                "Worktree: keep local changes when checkout branch",
                "improve ResolveRevision''''s Ref lookup path",
                "Support the ''''rebase'''' config key for branches",
                "plumbing: format/packfile, Fix data race and resource leak.",
                "fix wildcard handling in RefSpec matching",
                "use constant instead of literal string",
            ],
            (41472, "src-d/go-git"): [
                "worktree: allow manual ignore patterns when no .gitignore is available",
                "git: Fix typo",
                "git: Fix typo",
                "plumbing/cache: check for empty cache list",
                "git: fix goroutine block while pushing a remote",
                "git: remove potentially duplicate check for unstaged files",
                "Increase diffmatchcpatch timeout",
                "plumbing: object, Count stats properly when no new line added at the …",
                "fix missing error in bfsCommitIterator",
                "transactional: implement storer.PackfileWriter",
                "add Repository.CreateRemoteAnonymous",
                "fix panic in object.Tree.FindEntry",
                "travis: drop go1.10 add go1.12",
                "examples: commit, fixed minor typo in info statement",
                "plumbing: commit.StatsContext and fix for orphan commit",
            ],
            (41471, "src-d/go-git"): [
                "storage: transactional, new storage with transactional capabilities",
                "packfile: get object size correctly for delta objects",
                "worktree: add sentinel error for non-fast-forward pull",
                "Remove Unicode normalization in difftree",
                'remote: speed up pushes when the "remote" repo is local',
                "Ignore missing references/objects on log --all",
            ],
            (41470, "src-d/go-git"): ["storage/filesystem: check file object before using cache"],
            (41469, "src-d/go-git"): [
                "plumbing: format/packfile, performance optimizations for reading large commit"
                " histories",
                "git: return better error message when packfile cannot be downloaded",
                "storage/dotgit: use fs capabilities in setRef",
                "Simplify return statement in receivePackNoCheck",
                "Implement git log --all",
            ],
            (41468, "src-d/go-git"): ["repository: fix plain clone error handling regression"],
            (41467, "src-d/go-git"): [
                "remote: use reference deltas on push when the remote server does not …",
                "README: Fixed a typo.",
                "examples: PlainClone with Basic Authentication (Password & Access Token)",
                "git: enables building on OpenBSD, Dragonfly BSD and Solaris",
                'plumbing/format/packfile: Fix broken "thin" packfile support. Fixes #991',
                "plumbing: ReferenceName constructors",
                "add StackOverflow to support channels",
                "plumbing: transport/http, Add missing host/port on redirect. Fixes #820",
                "Fix spelling and grammar in docs and example",
                "update gcfg dependency to v1.4.0",
                "cleanup after failed clone",
                "http: improve TokenAuth documentation",
                " plumbing: ssh, Fix flaky test TestAdvertisedReferencesNotExists. Fixes #969",
                "repository: Fix RefSpec for a single tag.",
                "storage/filesystem: Added reindex method to  reindex packfiles",
                "plumbing: format/packfile, remove  unused getObjectData method",
                "plumbing: format/index: support for EOIE extension",
            ],
            (41485, "src-d/go-git"): [
                "references: sort: compare author timestamps when commit timestamps are equal."
                " Fixes #725",
                "Use remote name in fetch while clone",
                "Teach ResolveRevision how to look up annotated tags",
                "git: Add tagging support",
                "Fix `fatal: corrupt patch` error in unified diff format",
                "Expose Storage cache.",
                "plumbing/transport: ssh check if list of known_hosts files is empty.",
                "Fix potential LRU cache size issue.",
                "storage/filesystem: keep packs open in PackfileIter",
                "all: remove extra ''''s'''' in \"mismatch\"",
                "test: improve test for urlencoded user:pass",
                "use time.IsZero in Prune",
                "config: Add test for Windows local paths.",
                "git: Fix Status.IsClean() documentation",
                "plumbing: object, Add support for Log with filenames. Fixes #826",
                "tree: add a Size() method for getting plaintext size",
                "repository: allow open non-bare repositories as bare",
                "repository: improve CheckoutOption.Hash doc",
                "blame: fix edge case with missing \n in content length causing mismatched length"
                " error",
            ],
            (41484, "src-d/go-git"): [
                "worktree: sort the tree object.  Fixes #881",
                "added support for quarantine directory",
                "plumbing/object: fix panic when reading object header",
                "plumbing/format: gitignore, fixed an edge case for .gitignore",
                "plumbing/idxfile: object iterators returns entries in offset order",
                "plumbing, storage: add bases to the common cache",
                "Remove empty dirs when cleaning with Dir opt.",
                "storage/dotgit: search for incoming dir only once",
                "config: add commentChar to core config struct",
                "Clamp object timestamps before unix epoch to unix epoch",
                "plumbing/storer: add ExclusiveAccess option to Storer",
                "storage/dotgit: add KeepDescriptors option",
            ],
            (41483, "src-d/go-git"): [
                "git: fix documentation for Notes",
                "plumbing: object, return ErrFileNotFound in FindEntry. Fixes #883",
                "plumbing/transport/internal: common, support Gogs for ErrRepositoryNotFound",
                "plumbing/object: fix pgp signature encoder/decoder",
                "plumbing/format/idxfile: add new Index and MemoryIndex",
                "Feature/new packfile parser",
                " plumbing: packfile, new Packfile representation",
                "Bugfixes and IndexStorage",
                "Tests and indexes in packfile decoder",
                "Fix wrong godoc on Tags() method.",
                "Improve packfile reading performance",
                "plumbing: packfile, fix package tests",
                "Fixed cloning of a single tag",
                "Improvement/memory consumption new packfile parser",
                "git: Add ability to PGP sign commits",
            ],
            (41482, "src-d/go-git"): [
                "storage: filesystem, make ObjectStorage constructor public",
                "plumbing/transport: http, Adds token authentication support [Fixes #858]",
                "storage/filesystem: avoid norwfs build flag",
                "packfile: optimise NewIndexFromIdxFile for a very common case",
                "Remote.Fetch: error on missing remote reference",
                "utils: diff, skip useless rune->string conversion",
                "plumbing: add context to allow cancel on diff/patch computing",
            ],
            (41481, "src-d/go-git"): [
                "idxfile: optimise allocations in readObjectNames",
                "packfile: improve Index memory representation to be more compact",
                "config: modules, worktree: Submodule fixes for CVE-2018-11235",
                "dotgit: Move package outside internal.",
                "plumbing: object, adds tree path cache to trees. Fixes #793",
                "plumbing: packfile, Don''''t copy empty objects. Fixes #840",
            ],
            (41480, "src-d/go-git"): [
                'Fix for "Worktree Add function adds ".git" directory"',
                "Worktree: Provide ability to add excludes to worktree",
                "git: remote, Do not iterate all references on update.",
            ],
            (41479, "src-d/go-git"): [
                "Resolve full commit sha",
                "dotgit: ignore filenames that don''''t match a hash",
                "storage: dotgit, init fixtures in benchmark. Fixes #770",
                "git: remote, Add shallow commits instead of substituting. Fixes #412",
            ],
            (41478, "src-d/go-git"): [
                "add PlainOpen variant to find .git in parent dirs",
                "config: adds branches to config for tracking branches against remotes…",
                "use bsd superset for conditional compilation",
            ],
            (41477, "src-d/go-git"): [
                "Worktree.Checkout: handling of symlink on Windows",
                "Fix RefSpec.Src()",
                "*: skip time consuming tests",
                "Resolve HEAD if symRefs capability is not supported",
                "Use CheckClose with named returns and fix tests",
                "Add commit hash to blame result",
                "plumbing: format: pktline, Accept oversized pkt-lines up to 65524 bytes",
            ],
            (41476, "src-d/go-git"): [
                "new methods Worktree.[AddGlob|RemoveBlob] and recursive Worktree.[Add|Remove]",
                "blame: Add blame line data",
                "plumbing: ssh, return error when creating public keys from invalid PEM",
                "plubming: transport, Escape the user and pswd for endpoint. Fixes #723",
                "Unused params, unused code, make Go tip''''s vet happy",
                "storage/filesystem: optimize packfile iterator",
                "repository.Log: add alternatives for commit traversal order",
            ],
            (41517, "src-d/go-git"): [
                "Support for clone without checkout (git clone -n)",
                "plumbing: packfile, Add a buffer to crc writer",
                "plumbing: format/packfile, fix crash with cycle deltas",
                "storage/filesystem/shallow: fix error checking",
                "Fix mistyping",
                "plumbing: format/packfile, fix panic retrieving object hash.",
                "plumbing: diff, fix crash when a small ending equal-chunk",
                "transport: http, fix services redirecting only info/refs",
            ],
            (41519, "src-d/go-git"): [
                "Set default pack window size in config",
                "add branch add/remove example",
                "Clean reconstructed objects outside pack window",
                "plumbing: cache, modify cache to delete more than one item to free space",
            ],
            (41518, "src-d/go-git"): [
                "plumbing: object, commit.Parent() method",
                "Worktree.Add: Support Add deleted files, fixes #571",
                "revlist: do not visit again already visited parents",
                "remote: iterate over references only once",
                "packfile: improve performance of delta generation",
                "Minor fix to grammatical error in error message for ErrRepositoryNotExists",
                "revert: revlist: do not revisit already visited ancestors",
                "examples: update link to GoDoc in _examples/storage",
                "plumbing: the commit walker can skip externally-seen commits",
                "config: support a configurable, and turn-off-able, pack.window",
                "revlist: do not revisit ancestors as long as all branches are visited",
                "Add port to SCP Endpoints",
                "remote: add support for ls-remote",
                "remote: add the last 100 commits for each ref in haves list",
                "Add Stats() to Commit",
                "Fix spelling Unstagged -> Unstaged",
                "Add support for signed commits",
                "Fix spelling",
                "packp/capability: Skip argument validations for unknown capabilities",
                "packfile: use buffer pool for diffs",
                "packfile: delete index maps from memory when no longer needed",
                "travis: update go versions",
                "Updating reference to the git object model",
                "utils: merkletrie, filesystem fix symlinks to dir",
                "fix: a range loop can break in advance",
                "Fix typo in the readme",
                "format: packfile fix DecodeObjectAt when Decoder has type",
                "examples,plumbing,utils: typo fixes",
                "transport: made public all the fields and standardized AuthMethod",
                "transport: converts Endpoint interface into a struct",
                "dotgit: remove ref cache for packed refs",
                "plumbing/object: do not eat error on tree decode",
                "plumbing: object, new Commit.Verify method",
                "*: update to go-billy.v4 and go-git-fixtures.v3",
                "plumbing: object, fix Commit.Verify test",
                "plumbing: transport/http, Close http.Body reader when needed",
                "plumbing: object/tag, add signature and verification support",
                "doc: Update compatibility for commit/tag verify",
                "fix Repository.ResolveRevision for branch and tag",
                "all: fixes for ineffective assign",
                "storage: filesystem, add support for git alternates",
                "plumbing/transport: Fix truncated comment in Endpoint",
                "remote: support for non-force, fast-forward-only fetches",
                "dotgit: handle refs that exist in both packed-refs and a loose ref file",
                "all: simplification",
                "Updating the outdated README example to the new one",
                "storage/repository: add new functions for garbage collection",
                "all: gofmt -s",
                "dotgit: use Equal method of time.Time for equality",
                "git: worktree, add Clean() method for git clean",
                "object: patch, fix stats for submodules (fixes #654)",
                "License upgrade, plus code of conduct and contributing guidelines",
                "git: worktree, add Grep() method for git grep",
                "check .ssh/config for host and port overrides; fixes #629",
                "doc: update compatibility for clean",
                "README.md update",
                "git: Worktree.Grep() support multiple patterns and pathspecs",
                "*: simplication",
                "plumbing: packafile, improve delta reutilization",
                "plumbing: cache, enforce the use of cache in packfile decoder",
                "Add a setRef and rewritePackedRefsWhileLocked versions that supports non rw fs",
                "fix typo",
            ],
            (41514, "src-d/go-git"): [
                "dotgit: avoid duplicated references returned by Refs",
                "Worktree.Reset refactor and Soft, Merge, Hard and Mixed modes",
                "Add sideband support for push",
                "Repository.Clone added Tags option, and set by default AllTags",
                "packfile: improve performance a little by reducing gc pressure",
            ],
            (41513, "src-d/go-git"): [
                "config: multiple values in RemoteConfig (URLs and Fetch)",
                "reuse Auth method when recursing submodules, fixes #521",
                "Normalize filenames before comparing.",
                "plumbing: fix pack commands for the file client on Windows",
                "plumbing: moved `Reference.Is*` methods to `ReferenceName.Is*`",
                "Remote.Clone fix clone of tags in shallow mode",
                "*: windows support, some more fixes",
                "*: windows support, some more fixes (2)",
                "Avoid using user.Current()",
                "*: windows support, skipped receive_pack_test for git transport",
                "serialized remotes in alphabetical order",
                "prevent PackWriter from using Notify if nothing was written",
                "fix race condition on ObjectLRU",
                "examples: add example for pulling changes",
                "packp: fixed encoding when HEAD is not a valid ref",
                "plumbing: use LookPath instead of Stat to fix Windows executables",
                "_examples: context",
                "repository: Resolve commit when cloning annotated tag, fixes #557",
                "dotgit: rewrite the way references are looked up",
                "plumbing: use `seen` map in tree walker",
                "plumbing: use sliding window in delta calculations, like git CL",
                "remote: avoid expensive revlist operation when only deleting refs",
            ],
            (41516, "src-d/go-git"): [
                "Add example code for listing tags",
                "worktree: checkout, create branch",
                "repository: allow push from shallow repositories",
                "*: add more IO error checks",
                "packfile: Avoid panics patching corrupted deltas.",
                "*: several windows support fixes",
                "Implement a NoTags mode for fetch that mimics git fetch --no-tags",
                "remote: push, update remote refs on push",
                "move Repository.Pull to Worktree.Pull",
                "transport: context package support allowing cancellation of any network"
                " operation",
                "*: package context support in Repository, Remote and Submodule",
                "packfile: create packfile.Index and reuse it",
                "remote: pull refactor to match default behavior of cgit",
                "format: idxfile, support for >2Gb packfiles",
                "worktree: expose underlying filesystem",
                "cache: reuse object cache for delta resolution, use LRU policy",
                " storage: reuse deltas from packfiles",
                "revlist: ignore all objects reachable from ignored objects",
                "filesystem: reuse cache for packfile iterator",
            ],
            (41515, "src-d/go-git"): [
                "Fixed modules directory path",
                "transport/ssh: allow passing SSH options",
                "transport: http push",
                "capability: accept unknown capabilities, fixes #450",
                "storage/filesystem: Fix nil dereference in Shallow()",
                "fix race on packfile writer, fixes #351",
                "transport/file: avoid race with Command.Wait, fixes #463",
                "fix reference shortening",
                "remote: fix push delete, closes #466",
                "plumbing: protocol, fix handling multiple ACK on upload-pack",
                "improve delete support on push",
                "Use buffered IO for decoding index files.",
                "plumbing: protocol, fix handling multiple ACK on upload-pack and test…",
                "transport/server: add asClient parameter",
                "git: remove ErrObjectNotFound in favor of plumbing.ErrObjectNotFound",
                "worktree: test improvemnts on empty worktree",
                "remote: avoid duplicate haves",
                "remote: fix Worktree.Status on empty repository",
                "remote: fetch, correct behavior on tags",
            ],
            (41512, "src-d/go-git"): [
                "Partial windows support",
                "Support SSH Agent Auth on Windows",
                "storage/filesystem: call initialization explicitly, fixes #408",
                "packfile: A copy operation cannot be bigger than 64kb",
                "fix push on git and ssh",
                "fix naming of NewCommit{Pre,Post}Iterator",
                "fix gofmt",
                "Adds .gitignore support",
                "Update local remote references during fetch even if no pack needs to be received",
                "worktree: symlink support",
                "revlist: ignore treeEntries that are submodules.",
                "worktree: Add create and push the blob objects to the storer",
                "internal/dotgit: rewrite code to avoid stackoverflow errors",
                "Fixes checkout not possible with (untracked) files under gitignore",
            ],
            (41511, "src-d/go-git"): [
                "Add revision implementation",
                "package plumbing documentation improvements",
                "examples: aerospike example",
                "Fix compile-time error on Windows",
                "add merkletrie iterator and its helper frame type",
                "Fix missing objects if they where deltified using ref-delta",
                "Improve documentation",
                "add difftree for noders",
                "git: make Storer public in Repository.",
                "simplify noder mocks in tests",
                "transport/file: delete suite tmp dir at teardown",
                "transport/file: fix race condition on test",
                "merkletrie: fix const action type fuck up",
                "plumbing/storer: add RemoveReference",
                "Submodules init and update",
                "difftree for git.Trees",
                "Fix issue 275 (edited)",
                "cshared: remove directory (Fix #236)",
                "cache: move package to plumbing",
                "plumbing/transport: git, error on empty SSH_AUTH_SOCK",
                "travis update to 1.8 and makefile silence commands",
                "plumbing/object: move difftree to object package",
                "Fix issue 279",
                "plumbing/storer: referenceIterator now returns the error if any",
                "Add fast_finish flag to travis configuration",
                "plumbing: improve documentation (Fix #242)",
                "plumbing/cache: specify units in memory size (Fix #234)",
                "plumbing/revlist: input as a slice of hashes instead of commits",
                "_examples: improve documentation (fix #238)",
                "Remove TODOs from documentation",
                "improve git package documentation (fix #231)",
                "git: Repository methods changes",
                "issue #274: new filemode package",
                "Return values of Read not checked (fix #65)",
                "difftree: simplify hash comparison with deprecated files modes",
                "Support slash separated branch",
                "project: move imports from srcd.works to gopkg.in",
                "plumbing/object: add WalkCommitHistoryPost func",
                "plumbing: Use ReadBytes() rather than ReadSlice()",
                "Updated README in-memory example.",
                "references.go: fix Parents from commit iterator",
                "Work around a Go bug when parsing timezones",
                "object: fix Change.Files() method behavior (fix #317)",
                "add git checkout example + housekeeping",
                "Lazily load object index.",
                "Export raw config",
                "plumbing: transport, handle 403 in http transport",
                "Add Repository.Log() method (fix #298)",
                "worktree, status and reset implementation based on merkletrie",
                "worktree: reset and checkout support for submodules",
                "transport: ssh, default HostKeyCallback",
                "transport: ssh, NewPublicKeys helper",
                "transport: ssh, NewPublicKeys support for encrypted PEM files",
                "transport: ssh, new DefaultAuthBuilder variable",
                "fix go vet issues, add go vet to CI",
                "worktree: add method",
                "add support for .git as file, fixes #348",
                "plumbing: index, Entries converted in a slice of pointers",
                "transport: make Endpoint an interface, fixes #362",
                "support force push (refspec with +)",
                "add test for tags push, closes #354",
                "do not convert local paths to URL",
                "format/packfile: fix bug when the delta depth is equals to 50",
                "worktree: Commit method implementation",
                "examples: commit example",
                "README: add table with supported git features",
                "format/diff: unified diff encoder and public API",
                "transport/server: use Endpoint string representation as a map key.",
                "worktree: Remove and Move methods",
                "storage: filesystem, initialize the default folder scaffolding",
                "format/packfile: improve binary delta algorithm",
            ],
            (41510, "src-d/go-git"): [],
            (41509, "src-d/go-git"): [
                "packfile: cache undeltified objects to improve decode performance",
                "fixtures: support more than one source folder (fix #217)",
                "transport/http: fix partial request with haves. Fix #216.",
                "adds Tree method to Tree",
                "config: marshal and unmarshal done inside of the package, and submodules config"
                " file",
                "Worktree and new Repository Contructors",
                "Fix typos in git docs",
                "Fix typos in config pkg",
                "Fix typos in cache pkg",
                "Repository.Progress moved as a field in *Options",
                "Typo in fixtures",
                "Improved merkletrie, moved to utils.",
                "Fix some typos in plumbing docs",
            ],
            (41508, "src-d/go-git"): [
                "remote: add Push",
                "server: add git server implementation",
                "Correct typo at iter.go",
                "packfile/decoder: speed up packfile iterator when specific type",
                "packfile/scanner: reset zlib reader instead of new one",
                "plumbing: fix signature with `>` before `<` parsing",
                "doc: clarify return values of Pull/Fetch.",
                "repository: fix pull when fetch returns up-to-date",
                "remote: fix ErrEmptyUploadPackRequest error in fetch",
                "update transport Command interface to support SetAuth after creation",
                "fixtures: new fixture with multiple root commits",
                "blame: make line types and its fields public so they can be actually used",
                "fixtures: initialize fixtures into separated methods",
                "test: restore default protocol.",
            ],
            (41506, "src-d/go-git"): ["Extract billy", "fix plumbing/difftree package name"],
            (41505, "src-d/go-git"): [
                "Add configurable http client factory (fixes #120)",
                "plumbing: format, packfile fix issue #129, related #124, and documentation"
                " improvements",
                "plumbing/packfile: PACK encoder",
                "transport: create Client interface",
                "difftree: merkletrie internal package with iterator",
                "rev-list command implementation for objects",
                "plumbing/transport: add common tests and fixes.",
                "mv difftree/internal/radixmerkle to difftre/internal/merkletrie",
                "storage: filesystem, clean close when the packfile is not used",
                "move: format/packp -> protocol/packp",
                "remove old types from transport and use packp",
                "protocol/packp: sideband muxer and demuxer",
                "protocol/packp: capabilities new Capability entity and List struct, test"
                " improvements",
                "transport: add local transport",
                "travis: in PR unset SSH_AUTH_SOCK -> skip ssh tests.",
                "protocol/packp: add ReferenceUpdateRequest message",
                "format/pktline: fix readPayloadLen err handling",
                "file: return error on File.Contents() if reader fails",
                "capabilities: full integration",
                "capability: support empty input on Decode.",
                "protocol/packp: improve AdvRefs tests",
                "plumbing/protocol: packp avoid duplication of haves, wants and shallow",
                "packfile: delta diff implementation",
                "transport/internal: error handling fixes and clean up",
                "protocol/packp: UploadPackResponse implementation",
                "protocol/packp: add report status message.",
                "transport: add git-send-pack support to local/ssh.",
                "remote: sideband support",
                "plumbing/transport: allow AdvertisedReferences being called multiple times",
                "config: support delete refspecs (IsDelete).",
                "remote: fix Connect, returned nil error on failure.",
                "repository: Ref -> Reference; Refs -> References.",
                "fixtures: always return a new directory with DotGit.",
                "packp/capability: trim spaces on capabilities decode.",
                "fixtures: fix empty repository fixture .git.",
                "format/packfile: implement delta encoding",
                "Update LICENSE",
                "transport: new git protocol",
                "examples: review, testing and documentation",
                "config: Config, bare flag",
                "plumbing/transport/git: fix import",
                "storage: shallow storage",
                "readme and log example",
                "packfile: delta selection logic",
                "move plumbing from top level package to plumbing",
                "remote: make Fetch atomic.",
                "packfile: improve delta copy operation encoding code",
                "protocol/packp: use ReferenceName type for Command.Name.",
                "improve Tag test coverage",
                "transport: ssh, keeping the original path",
            ],
            (41503, "src-d/go-git"): [
                "gofmt simplify",
                "global storage interface refactor",
                "new plumbing package",
                "utils/fs: add ReadAt to memory file and tests.",
                "Fix nil tx bug",
            ],
            (41502, "src-d/go-git"): [
                "utils/fs: Fix O_CREATE flag check in OpenFile",
                "utils/fs: added test for open-read-seek.",
            ],
            (41501, "src-d/go-git"): [
                "formats: Index read support",
                "Use advrefs in gituploadpackinfo",
                "utils/fs: move ''''os'''' and ''''test'''' to separate packages.",
                "utils/fs: add Remove().",
                "utils/fs: add test for create file in dir.",
                "Fix ssh workflow",
                "formats/config: Added encoder/decoder for git config files.",
                "utils/fs/test: add testing of stat on subdirs.",
                "storage: filesystem fix config on new repositories",
                "utils: binary, new package that collect all the spare helper functions",
                "utils/fs: add OpenFile method to filesystem interface.",
                "format: index encoder and index decoder improvements",
                "ulreq: adds encoder and decoder for upload-request messages",
                "utils: fs, new memory filesystem\t",
                "fix package documentation",
                "storage/filesystem: implement missing functionality.",
                "fixtures: Add DotGitHash to tags repository",
                "add Blobs, Trees and Objects iters.",
                "fixtures: Add missing ObjectsCount",
            ],
            (41507, "src-d/go-git"): [
                "add simple difftree implementation",
                "Decode tree bug: incomplete reads break the decoding process",
                "Fix #62",
                "Support non packed objects",
                "storage: Add object type hint parameter to ObjectStorage.Get.",
                "object: Add Encode method to all objects.",
                "remove old utils/difftree package.",
                "fix a typo in readme",
                "Substitute old pktline encoder/decoder with new pktline scanner",
                "Fix StorageSuite.TestConfigStorageRemotes",
                "utils: fs.TempFile",
                "Fix pktline api",
                "OSFile: implement io.ReaderAt.",
            ],
            (41496, "src-d/go-git"): [
                "Fix some bugs found during gypogit testing",
                "Repository head",
            ],
            (41495, "src-d/go-git"): [
                "Add cshared files to allow building wrappers in other languages",
                "Adds support to open local repositories and to use file-based object storage",
                "Wrap more objects with CGo",
            ],
            (41500, "src-d/go-git"): [],
            (41499, "src-d/go-git"): ["Fix PullDefault to not cause panics."],
            (41498, "src-d/go-git"): [],
            (41497, "src-d/go-git"): [],
            (41490, "src-d/go-git"): [
                "Iterable ObjectStorage interface for use in Repository struct",
            ],
            (41488, "src-d/go-git"): ["gofmt -s"],
            (41487, "src-d/go-git"): ["Performance increase for big repos"],
            (41486, "src-d/go-git"): [],
            (41494, "src-d/go-git"): [],
            (41493, "src-d/go-git"): [],
            (41492, "src-d/go-git"): ["blame code reorganization, and mutting the test"],
            (41491, "src-d/go-git"): [],
        },
        "prs_jira": {
            (41475, "src-d/go-git"): None,
            (41474, "src-d/go-git"): None,
            (41473, "src-d/go-git"): None,
            (41472, "src-d/go-git"): None,
            (41471, "src-d/go-git"): None,
            (41470, "src-d/go-git"): None,
            (41469, "src-d/go-git"): None,
            (41468, "src-d/go-git"): None,
            (41467, "src-d/go-git"): None,
            (41485, "src-d/go-git"): None,
            (41484, "src-d/go-git"): None,
            (41483, "src-d/go-git"): None,
            (41482, "src-d/go-git"): None,
            (41481, "src-d/go-git"): None,
            (41480, "src-d/go-git"): None,
            (41479, "src-d/go-git"): None,
            (41478, "src-d/go-git"): None,
            (41477, "src-d/go-git"): None,
            (41476, "src-d/go-git"): None,
            (41517, "src-d/go-git"): None,
            (41519, "src-d/go-git"): None,
            (41518, "src-d/go-git"): None,
            (41514, "src-d/go-git"): None,
            (41513, "src-d/go-git"): None,
            (41516, "src-d/go-git"): None,
            (41515, "src-d/go-git"): None,
            (41512, "src-d/go-git"): None,
            (41511, "src-d/go-git"): None,
            (41510, "src-d/go-git"): None,
            (41509, "src-d/go-git"): None,
            (41508, "src-d/go-git"): None,
            (41506, "src-d/go-git"): None,
            (41505, "src-d/go-git"): None,
            (41503, "src-d/go-git"): None,
            (41502, "src-d/go-git"): None,
            (41501, "src-d/go-git"): None,
            (41507, "src-d/go-git"): None,
            (41496, "src-d/go-git"): None,
            (41495, "src-d/go-git"): None,
            (41500, "src-d/go-git"): None,
            (41499, "src-d/go-git"): None,
            (41498, "src-d/go-git"): None,
            (41497, "src-d/go-git"): None,
            (41490, "src-d/go-git"): None,
            (41488, "src-d/go-git"): None,
            (41487, "src-d/go-git"): None,
            (41486, "src-d/go-git"): None,
            (41494, "src-d/go-git"): None,
            (41493, "src-d/go-git"): None,
            (41492, "src-d/go-git"): None,
            (41491, "src-d/go-git"): None,
        },
        "deployments": {
            (41475, "src-d/go-git"): None,
            (41474, "src-d/go-git"): None,
            (41473, "src-d/go-git"): None,
            (41472, "src-d/go-git"): None,
            (41471, "src-d/go-git"): None,
            (41470, "src-d/go-git"): None,
            (41469, "src-d/go-git"): None,
            (41468, "src-d/go-git"): None,
            (41467, "src-d/go-git"): None,
            (41485, "src-d/go-git"): None,
            (41484, "src-d/go-git"): None,
            (41483, "src-d/go-git"): None,
            (41482, "src-d/go-git"): None,
            (41481, "src-d/go-git"): None,
            (41480, "src-d/go-git"): None,
            (41479, "src-d/go-git"): None,
            (41478, "src-d/go-git"): None,
            (41477, "src-d/go-git"): None,
            (41476, "src-d/go-git"): None,
            (41517, "src-d/go-git"): None,
            (41519, "src-d/go-git"): None,
            (41518, "src-d/go-git"): None,
            (41514, "src-d/go-git"): None,
            (41513, "src-d/go-git"): None,
            (41516, "src-d/go-git"): None,
            (41515, "src-d/go-git"): None,
            (41512, "src-d/go-git"): None,
            (41511, "src-d/go-git"): None,
            (41510, "src-d/go-git"): None,
            (41509, "src-d/go-git"): None,
            (41508, "src-d/go-git"): None,
            (41506, "src-d/go-git"): None,
            (41505, "src-d/go-git"): None,
            (41503, "src-d/go-git"): None,
            (41502, "src-d/go-git"): None,
            (41501, "src-d/go-git"): None,
            (41507, "src-d/go-git"): None,
            (41496, "src-d/go-git"): None,
            (41495, "src-d/go-git"): None,
            (41500, "src-d/go-git"): None,
            (41499, "src-d/go-git"): None,
            (41498, "src-d/go-git"): None,
            (41497, "src-d/go-git"): None,
            (41490, "src-d/go-git"): None,
            (41488, "src-d/go-git"): None,
            (41487, "src-d/go-git"): None,
            (41486, "src-d/go-git"): None,
            (41494, "src-d/go-git"): None,
            (41493, "src-d/go-git"): None,
            (41492, "src-d/go-git"): None,
            (41491, "src-d/go-git"): None,
        },
        "age": {
            (41475, "src-d/go-git"): pd.Timedelta("1 days 01:44:14"),
            (41474, "src-d/go-git"): pd.Timedelta("42 days 14:43:54"),
            (41473, "src-d/go-git"): pd.Timedelta("61 days 12:00:20"),
            (41472, "src-d/go-git"): pd.Timedelta("62 days 23:02:57"),
            (41471, "src-d/go-git"): pd.Timedelta("14 days 17:40:53"),
            (41470, "src-d/go-git"): pd.Timedelta("0 days 08:09:17"),
            (41469, "src-d/go-git"): pd.Timedelta("63 days 18:40:09"),
            (41468, "src-d/go-git"): pd.Timedelta("7 days 16:47:44"),
            (41467, "src-d/go-git"): pd.Timedelta("34 days 12:49:02"),
            (41485, "src-d/go-git"): pd.Timedelta("39 days 02:41:13"),
            (41484, "src-d/go-git"): pd.Timedelta("20 days 20:44:28"),
            (41483, "src-d/go-git"): pd.Timedelta("38 days 00:24:01"),
            (41482, "src-d/go-git"): pd.Timedelta("32 days 02:17:06"),
            (41481, "src-d/go-git"): pd.Timedelta("22 days 21:06:20"),
            (41480, "src-d/go-git"): pd.Timedelta("28 days 20:58:21"),
            (41479, "src-d/go-git"): pd.Timedelta("6 days 05:04:00"),
            (41478, "src-d/go-git"): pd.Timedelta("8 days 00:24:48"),
            (41477, "src-d/go-git"): pd.Timedelta("21 days 21:36:25"),
            (41476, "src-d/go-git"): pd.Timedelta("22 days 22:10:14"),
            (41517, "src-d/go-git"): pd.Timedelta("31 days 22:37:43"),
            (41519, "src-d/go-git"): pd.Timedelta("8 days 00:35:15"),
            (41518, "src-d/go-git"): pd.Timedelta("125 days 19:12:28"),
            (41514, "src-d/go-git"): pd.Timedelta("6 days 22:37:02"),
            (41513, "src-d/go-git"): pd.Timedelta("30 days 23:13:34"),
            (41516, "src-d/go-git"): pd.Timedelta("11 days 12:02:59"),
            (41515, "src-d/go-git"): pd.Timedelta("24 days 09:43:53"),
            (41512, "src-d/go-git"): pd.Timedelta("29 days 12:04:34"),
            (41511, "src-d/go-git"): pd.Timedelta("112 days 00:21:38"),
            (41510, "src-d/go-git"): pd.Timedelta("0 days 23:48:24"),
            (41509, "src-d/go-git"): pd.Timedelta("11 days 20:29:13"),
            (41508, "src-d/go-git"): pd.Timedelta("30 days 19:53:48"),
            (41506, "src-d/go-git"): pd.Timedelta("2 days 19:45:31"),
            (41505, "src-d/go-git"): pd.Timedelta("32 days 00:38:29"),
            (41503, "src-d/go-git"): pd.Timedelta("7 days 10:12:43"),
            (41502, "src-d/go-git"): pd.Timedelta("2 days 19:38:14"),
            (41501, "src-d/go-git"): pd.Timedelta("38 days 04:41:13"),
            (41507, "src-d/go-git"): pd.Timedelta("56 days 01:44:25"),
            (41496, "src-d/go-git"): pd.Timedelta("27 days 20:28:23"),
            (41495, "src-d/go-git"): pd.Timedelta("47 days 00:55:47"),
            (41500, "src-d/go-git"): pd.Timedelta("8 days 23:17:32"),
            (41499, "src-d/go-git"): pd.Timedelta("15 days 04:52:38"),
            (41498, "src-d/go-git"): pd.Timedelta("2 days 21:47:06"),
            (41497, "src-d/go-git"): pd.Timedelta("58 days 09:34:39"),
            (41490, "src-d/go-git"): pd.Timedelta("7 days 07:24:03"),
            (41488, "src-d/go-git"): pd.Timedelta("20 days 05:30:41"),
            (41487, "src-d/go-git"): pd.Timedelta("15 days 23:41:53"),
            (41486, "src-d/go-git"): pd.Timedelta("2 days 19:24:15"),
            (41494, "src-d/go-git"): pd.Timedelta("1 days 00:57:12"),
            (41493, "src-d/go-git"): pd.Timedelta("25 days 14:50:16"),
            (41492, "src-d/go-git"): pd.Timedelta("51 days 13:01:36"),
            (41491, "src-d/go-git"): pd.Timedelta("199 days 09:01:05"),
        },
        "additions": {
            (41475, "src-d/go-git"): 2,
            (41474, "src-d/go-git"): 499,
            (41473, "src-d/go-git"): 11841,
            (41472, "src-d/go-git"): 633,
            (41471, "src-d/go-git"): 2922,
            (41470, "src-d/go-git"): 42,
            (41469, "src-d/go-git"): 1177,
            (41468, "src-d/go-git"): 114,
            (41467, "src-d/go-git"): 1971,
            (41485, "src-d/go-git"): 10461,
            (41484, "src-d/go-git"): 1886,
            (41483, "src-d/go-git"): 10316,
            (41482, "src-d/go-git"): 980,
            (41481, "src-d/go-git"): 396,
            (41480, "src-d/go-git"): 453,
            (41479, "src-d/go-git"): 380,
            (41478, "src-d/go-git"): 1160,
            (41477, "src-d/go-git"): 747,
            (41476, "src-d/go-git"): 2497,
            (41517, "src-d/go-git"): 625,
            (41519, "src-d/go-git"): 304,
            (41518, "src-d/go-git"): 10699,
            (41514, "src-d/go-git"): 1000,
            (41513, "src-d/go-git"): 1985,
            (41516, "src-d/go-git"): 6312,
            (41515, "src-d/go-git"): 2052,
            (41512, "src-d/go-git"): 3285,
            (41511, "src-d/go-git"): 30744,
            (41510, "src-d/go-git"): 323,
            (41509, "src-d/go-git"): 6473,
            (41508, "src-d/go-git"): 2734,
            (41506, "src-d/go-git"): 48,
            (41505, "src-d/go-git"): 14670,
            (41503, "src-d/go-git"): 2814,
            (41502, "src-d/go-git"): 37,
            (41501, "src-d/go-git"): 8942,
            (41507, "src-d/go-git"): 17069,
            (41496, "src-d/go-git"): 230,
            (41495, "src-d/go-git"): 10317,
            (41500, "src-d/go-git"): 16,
            (41499, "src-d/go-git"): 10,
            (41498, "src-d/go-git"): 114,
            (41497, "src-d/go-git"): 2399,
            (41490, "src-d/go-git"): 3327,
            (41488, "src-d/go-git"): 392,
            (41487, "src-d/go-git"): 620,
            (41486, "src-d/go-git"): 26,
            (41494, "src-d/go-git"): 68,
            (41493, "src-d/go-git"): 407,
            (41492, "src-d/go-git"): 10464,
            (41491, "src-d/go-git"): 1884,
        },
        "deletions": {
            (41475, "src-d/go-git"): 2,
            (41474, "src-d/go-git"): 186,
            (41473, "src-d/go-git"): 1664,
            (41472, "src-d/go-git"): 80,
            (41471, "src-d/go-git"): 144,
            (41470, "src-d/go-git"): 10,
            (41469, "src-d/go-git"): 376,
            (41468, "src-d/go-git"): 38,
            (41467, "src-d/go-git"): 338,
            (41485, "src-d/go-git"): 2857,
            (41484, "src-d/go-git"): 283,
            (41483, "src-d/go-git"): 4930,
            (41482, "src-d/go-git"): 242,
            (41481, "src-d/go-git"): 108,
            (41480, "src-d/go-git"): 28,
            (41479, "src-d/go-git"): 26,
            (41478, "src-d/go-git"): 26,
            (41477, "src-d/go-git"): 107,
            (41476, "src-d/go-git"): 374,
            (41517, "src-d/go-git"): 89,
            (41519, "src-d/go-git"): 133,
            (41518, "src-d/go-git"): 3354,
            (41514, "src-d/go-git"): 330,
            (41513, "src-d/go-git"): 515,
            (41516, "src-d/go-git"): 2475,
            (41515, "src-d/go-git"): 830,
            (41512, "src-d/go-git"): 954,
            (41511, "src-d/go-git"): 12512,
            (41510, "src-d/go-git"): 146,
            (41509, "src-d/go-git"): 3562,
            (41508, "src-d/go-git"): 556,
            (41506, "src-d/go-git"): 1185,
            (41505, "src-d/go-git"): 6763,
            (41503, "src-d/go-git"): 2858,
            (41502, "src-d/go-git"): 3,
            (41501, "src-d/go-git"): 1551,
            (41507, "src-d/go-git"): 13498,
            (41496, "src-d/go-git"): 13,
            (41495, "src-d/go-git"): 978,
            (41500, "src-d/go-git"): 14,
            (41499, "src-d/go-git"): 12,
            (41498, "src-d/go-git"): 14,
            (41497, "src-d/go-git"): 616,
            (41490, "src-d/go-git"): 883,
            (41488, "src-d/go-git"): 163,
            (41487, "src-d/go-git"): 54,
            (41486, "src-d/go-git"): 6,
            (41494, "src-d/go-git"): 2,
            (41493, "src-d/go-git"): 101,
            (41492, "src-d/go-git"): 3402,
            (41491, "src-d/go-git"): 287,
        },
        "commits_count": {
            (41475, "src-d/go-git"): 2,
            (41474, "src-d/go-git"): 20,
            (41473, "src-d/go-git"): 88,
            (41472, "src-d/go-git"): 32,
            (41471, "src-d/go-git"): 19,
            (41470, "src-d/go-git"): 2,
            (41469, "src-d/go-git"): 13,
            (41468, "src-d/go-git"): 2,
            (41467, "src-d/go-git"): 35,
            (41485, "src-d/go-git"): 62,
            (41484, "src-d/go-git"): 39,
            (41483, "src-d/go-git"): 60,
            (41482, "src-d/go-git"): 14,
            (41481, "src-d/go-git"): 14,
            (41480, "src-d/go-git"): 6,
            (41479, "src-d/go-git"): 10,
            (41478, "src-d/go-git"): 6,
            (41477, "src-d/go-git"): 17,
            (41476, "src-d/go-git"): 21,
            (41517, "src-d/go-git"): 21,
            (41519, "src-d/go-git"): 13,
            (41518, "src-d/go-git"): 181,
            (41514, "src-d/go-git"): 11,
            (41513, "src-d/go-git"): 48,
            (41516, "src-d/go-git"): 62,
            (41515, "src-d/go-git"): 42,
            (41512, "src-d/go-git"): 46,
            (41511, "src-d/go-git"): 195,
            (41510, "src-d/go-git"): 7,
            (41509, "src-d/go-git"): 34,
            (41508, "src-d/go-git"): 14,
            (41506, "src-d/go-git"): 2,
            (41505, "src-d/go-git"): 58,
            (41503, "src-d/go-git"): 6,
            (41502, "src-d/go-git"): 3,
            (41501, "src-d/go-git"): 23,
            (41507, "src-d/go-git"): 110,
            (41496, "src-d/go-git"): 2,
            (41495, "src-d/go-git"): 8,
            (41500, "src-d/go-git"): 2,
            (41499, "src-d/go-git"): 2,
            (41498, "src-d/go-git"): 4,
            (41497, "src-d/go-git"): 12,
            (41490, "src-d/go-git"): 25,
            (41488, "src-d/go-git"): 30,
            (41487, "src-d/go-git"): 9,
            (41486, "src-d/go-git"): 2,
            (41494, "src-d/go-git"): 2,
            (41493, "src-d/go-git"): 4,
            (41492, "src-d/go-git"): 47,
            (41491, "src-d/go-git"): 21,
        },
        "repository_node_id": {
            (41475, "src-d/go-git"): 40550,
            (41474, "src-d/go-git"): 40550,
            (41473, "src-d/go-git"): 40550,
            (41472, "src-d/go-git"): 40550,
            (41471, "src-d/go-git"): 40550,
            (41470, "src-d/go-git"): 40550,
            (41469, "src-d/go-git"): 40550,
            (41468, "src-d/go-git"): 40550,
            (41467, "src-d/go-git"): 40550,
            (41485, "src-d/go-git"): 40550,
            (41484, "src-d/go-git"): 40550,
            (41483, "src-d/go-git"): 40550,
            (41482, "src-d/go-git"): 40550,
            (41481, "src-d/go-git"): 40550,
            (41480, "src-d/go-git"): 40550,
            (41479, "src-d/go-git"): 40550,
            (41478, "src-d/go-git"): 40550,
            (41477, "src-d/go-git"): 40550,
            (41476, "src-d/go-git"): 40550,
            (41517, "src-d/go-git"): 40550,
            (41519, "src-d/go-git"): 40550,
            (41518, "src-d/go-git"): 40550,
            (41514, "src-d/go-git"): 40550,
            (41513, "src-d/go-git"): 40550,
            (41516, "src-d/go-git"): 40550,
            (41515, "src-d/go-git"): 40550,
            (41512, "src-d/go-git"): 40550,
            (41511, "src-d/go-git"): 40550,
            (41510, "src-d/go-git"): 40550,
            (41509, "src-d/go-git"): 40550,
            (41508, "src-d/go-git"): 40550,
            (41506, "src-d/go-git"): 40550,
            (41505, "src-d/go-git"): 40550,
            (41503, "src-d/go-git"): 40550,
            (41502, "src-d/go-git"): 40550,
            (41501, "src-d/go-git"): 40550,
            (41507, "src-d/go-git"): 40550,
            (41496, "src-d/go-git"): 40550,
            (41495, "src-d/go-git"): 40550,
            (41500, "src-d/go-git"): 40550,
            (41499, "src-d/go-git"): 40550,
            (41498, "src-d/go-git"): 40550,
            (41497, "src-d/go-git"): 40550,
            (41490, "src-d/go-git"): 40550,
            (41488, "src-d/go-git"): 40550,
            (41487, "src-d/go-git"): 40550,
            (41486, "src-d/go-git"): 40550,
            (41494, "src-d/go-git"): 40550,
            (41493, "src-d/go-git"): 40550,
            (41492, "src-d/go-git"): 40550,
            (41491, "src-d/go-git"): 40550,
        },
        "published_at": {
            (41475, "src-d/go-git"): pd.Timestamp("2019-08-01 15:25:42+0000", tz="UTC"),
            (41474, "src-d/go-git"): pd.Timestamp("2019-07-31 13:41:28+0000", tz="UTC"),
            (41473, "src-d/go-git"): pd.Timestamp("2019-06-18 22:57:34+0000", tz="UTC"),
            (41472, "src-d/go-git"): pd.Timestamp("2019-04-18 10:57:14+0000", tz="UTC"),
            (41471, "src-d/go-git"): pd.Timestamp("2019-02-14 11:54:17+0000", tz="UTC"),
            (41470, "src-d/go-git"): pd.Timestamp("2019-01-30 18:13:24+0000", tz="UTC"),
            (41469, "src-d/go-git"): pd.Timestamp("2019-01-30 10:04:07+0000", tz="UTC"),
            (41468, "src-d/go-git"): pd.Timestamp("2018-11-27 15:23:58+0000", tz="UTC"),
            (41467, "src-d/go-git"): pd.Timestamp("2018-11-19 22:36:14+0000", tz="UTC"),
            (41485, "src-d/go-git"): pd.Timestamp("2018-10-16 09:47:12+0000", tz="UTC"),
            (41484, "src-d/go-git"): pd.Timestamp("2018-09-07 07:05:59+0000", tz="UTC"),
            (41483, "src-d/go-git"): pd.Timestamp("2018-08-17 10:21:31+0000", tz="UTC"),
            (41482, "src-d/go-git"): pd.Timestamp("2018-07-10 09:57:30+0000", tz="UTC"),
            (41481, "src-d/go-git"): pd.Timestamp("2018-06-08 07:40:24+0000", tz="UTC"),
            (41480, "src-d/go-git"): pd.Timestamp("2018-05-16 10:34:04+0000", tz="UTC"),
            (41479, "src-d/go-git"): pd.Timestamp("2018-04-17 13:35:43+0000", tz="UTC"),
            (41478, "src-d/go-git"): pd.Timestamp("2018-04-11 08:31:43+0000", tz="UTC"),
            (41477, "src-d/go-git"): pd.Timestamp("2018-04-03 08:06:55+0000", tz="UTC"),
            (41476, "src-d/go-git"): pd.Timestamp("2018-03-12 10:30:30+0000", tz="UTC"),
            (41517, "src-d/go-git"): pd.Timestamp("2018-02-17 12:20:16+0000", tz="UTC"),
            (41519, "src-d/go-git"): pd.Timestamp("2018-01-16 13:42:33+0000", tz="UTC"),
            (41518, "src-d/go-git"): pd.Timestamp("2018-01-08 13:07:18+0000", tz="UTC"),
            (41514, "src-d/go-git"): pd.Timestamp("2017-09-04 17:54:50+0000", tz="UTC"),
            (41513, "src-d/go-git"): pd.Timestamp("2017-08-28 19:17:48+0000", tz="UTC"),
            (41516, "src-d/go-git"): pd.Timestamp("2017-07-28 20:04:14+0000", tz="UTC"),
            (41515, "src-d/go-git"): pd.Timestamp("2017-07-17 08:01:15+0000", tz="UTC"),
            (41512, "src-d/go-git"): pd.Timestamp("2017-06-22 22:17:22+0000", tz="UTC"),
            (41511, "src-d/go-git"): pd.Timestamp("2017-05-24 10:12:48+0000", tz="UTC"),
            (41510, "src-d/go-git"): pd.Timestamp("2017-02-01 09:51:10+0000", tz="UTC"),
            (41509, "src-d/go-git"): pd.Timestamp("2017-01-31 10:02:46+0000", tz="UTC"),
            (41508, "src-d/go-git"): pd.Timestamp("2017-01-19 13:33:33+0000", tz="UTC"),
            (41506, "src-d/go-git"): pd.Timestamp("2016-12-19 17:39:45+0000", tz="UTC"),
            (41505, "src-d/go-git"): pd.Timestamp("2016-12-16 21:54:14+0000", tz="UTC"),
            (41503, "src-d/go-git"): pd.Timestamp("2016-11-14 21:15:45+0000", tz="UTC"),
            (41502, "src-d/go-git"): pd.Timestamp("2016-11-07 11:03:02+0000", tz="UTC"),
            (41501, "src-d/go-git"): pd.Timestamp("2016-11-04 15:24:48+0000", tz="UTC"),
            (41507, "src-d/go-git"): pd.Timestamp("2016-09-27 10:43:35+0000", tz="UTC"),
            (41496, "src-d/go-git"): pd.Timestamp("2016-08-02 08:59:10+0000", tz="UTC"),
            (41495, "src-d/go-git"): pd.Timestamp("2016-07-05 12:30:47+0000", tz="UTC"),
            (41500, "src-d/go-git"): pd.Timestamp("2016-05-19 11:35:00+0000", tz="UTC"),
            (41499, "src-d/go-git"): pd.Timestamp("2016-05-10 12:17:28+0000", tz="UTC"),
            (41498, "src-d/go-git"): pd.Timestamp("2016-04-25 07:24:50+0000", tz="UTC"),
            (41497, "src-d/go-git"): pd.Timestamp("2016-04-22 09:37:44+0000", tz="UTC"),
            (41490, "src-d/go-git"): pd.Timestamp("2016-02-24 00:03:05+0000", tz="UTC"),
            (41488, "src-d/go-git"): pd.Timestamp("2016-02-16 16:39:02+0000", tz="UTC"),
            (41487, "src-d/go-git"): pd.Timestamp("2016-01-27 11:08:21+0000", tz="UTC"),
            (41486, "src-d/go-git"): pd.Timestamp("2016-01-11 11:26:28+0000", tz="UTC"),
            (41494, "src-d/go-git"): pd.Timestamp("2016-01-08 16:02:13+0000", tz="UTC"),
            (41493, "src-d/go-git"): pd.Timestamp("2016-01-07 15:05:01+0000", tz="UTC"),
            (41492, "src-d/go-git"): pd.Timestamp("2015-12-13 00:14:45+0000", tz="UTC"),
            (41491, "src-d/go-git"): pd.Timestamp("2015-10-22 11:13:09+0000", tz="UTC"),
        },
        "sha": {
            (41475, "src-d/go-git"): b"0d1a009cbb604db18be960db5f1525b99a55d727",
            (41474, "src-d/go-git"): b"6241d0e70427cb0db4ca00182717af88f638268c",
            (41473, "src-d/go-git"): b"f9a30199e7083bdda8adad3a4fa2ec42d25c1fdb",
            (41472, "src-d/go-git"): b"aa6f288c256ff8baf8a7745546a9752323dc0d89",
            (41471, "src-d/go-git"): b"db6c41c156481962abf9a55a324858674c25ab08",
            (41470, "src-d/go-git"): b"a1f6ef44dfed1253ef7f3bc049f66b15f8fc2ab2",
            (41469, "src-d/go-git"): b"434611b74cb54538088c6aeed4ed27d3044064fa",
            (41468, "src-d/go-git"): b"3dbfb89e0f5bce0008724e547b999fe3af9f60db",
            (41467, "src-d/go-git"): b"f62cd8e3495579a8323455fa0c4e6c44bb0d5e09",
            (41485, "src-d/go-git"): b"cd64b4d630b6c2d2b3d72e9615e14f9d58bb5787",
            (41484, "src-d/go-git"): b"d3cec13ac0b195bfb897ed038a08b5130ab9969e",
            (41483, "src-d/go-git"): b"7b6c1266556f59ac436fada3fa6106d4a84f9b56",
            (41482, "src-d/go-git"): b"3bd5e82b2512d85becae9677fa06b5a973fd4cfb",
            (41481, "src-d/go-git"): b"b23570073eaee3489e5e3d666f22ba5cbeb53243",
            (41480, "src-d/go-git"): b"57570e84f8c5739f0f4a59387493e590e709dde9",
            (41479, "src-d/go-git"): b"b30763cb64afa91c016b23e905af0a378eb1b76d",
            (41478, "src-d/go-git"): b"0db54e829f81a28f71c22d54c03daba5ec144c8d",
            (41477, "src-d/go-git"): b"247cf690745dfd67ccd9f0c07878e6dd85e6c9ed",
            (41476, "src-d/go-git"): b"1d28459504251497e0ce6132a0fadd5eb44ffd22",
            (41517, "src-d/go-git"): b"886dc83f3ed518a78772055497bcc7d7621b468e",
            (41519, "src-d/go-git"): b"e9247ce9c5ce12126f646ca3ddf0066e4829bd14",
            (41518, "src-d/go-git"): b"bf3b1f1fb9e0a04d0f87511a7ded2562b48a19d8",
            (41514, "src-d/go-git"): b"f9879dd043f84936a1f8acb8a53b74332a7ae135",
            (41513, "src-d/go-git"): b"7aa9d15d395282144f31a09c0fac230da3f65360",
            (41516, "src-d/go-git"): b"8ddbecf782c2e340fd85bb4ba4d00dc73d749f87",
            (41515, "src-d/go-git"): b"d3c7400c39f86a4c59340c7a9cda8497186e00fc",
            (41512, "src-d/go-git"): b"ad02bf020460c210660db4fffda7f926b6aae95a",
            (41511, "src-d/go-git"): b"7e249dfcf28765939bde8f38784b3274b522f880",
            (41510, "src-d/go-git"): b"a9920b123ba1f6819a8c03209582d4d28e9fd831",
            (41509, "src-d/go-git"): b"f84e3bbfe59f5438c90000e6a89b41ec8eab51fb",
            (41508, "src-d/go-git"): b"441713897ef5604e8105379f45ebb982ab2c9a75",
            (41506, "src-d/go-git"): b"e42e10f112ec93fbca3d972dffa9566b94a0f6f8",
            (41505, "src-d/go-git"): b"c9353b2bd7c1cbdf8f78dad6deac64ed2f2ed9eb",
            (41503, "src-d/go-git"): b"eb89d2dd9a36440d58aea224c055b364e49785f7",
            (41502, "src-d/go-git"): b"f6ed7424cbf33c7013332d7e95b4262a4bc4a523",
            (41501, "src-d/go-git"): b"743989abd8c1277dff78e56c2583a9f6dff796ff",
            (41507, "src-d/go-git"): b"8cd772a53e8ecd2687b739eea110fa9b179f1e0f",
            (41496, "src-d/go-git"): b"5413c7aeadb7cb18a6d51dae0bc313f2e129a337",
            (41495, "src-d/go-git"): b"5e73f01cb2e027a8f02801635b79d3a9bc866914",
            (41500, "src-d/go-git"): b"08f9e7015aad2ca768638b446fb8632f11601899",
            (41499, "src-d/go-git"): b"1cd347ec8970388f83745c9a530ea2bcd705c6d9",
            (41498, "src-d/go-git"): b"36d14454b32eca89ac43d2934c50f3a1ae2e1d20",
            (41497, "src-d/go-git"): b"b08327bfaf27171dddc5516c63e5646c40f0b004",
            (41490, "src-d/go-git"): b"07ca1ac7f3058ea6d3274a01973541fb84782f5e",
            (41488, "src-d/go-git"): b"1931dfbf38508e790e9f129873bc073aacc6a50f",
            (41487, "src-d/go-git"): b"35ee4d749be21691b78a7465361ad47179fe2eff",
            (41486, "src-d/go-git"): b"37cc5cf842c3c0fb989bcf7525cc8f826d96b295",
            (41494, "src-d/go-git"): b"cebec78608e7913b8c843390237fd609069022ae",
            (41493, "src-d/go-git"): b"da5ab9de3e4c1bffa533108f46c5adc30929f7c2",
            (41492, "src-d/go-git"): b"f821e1340752dce95f73375dc9a13dcd58d58f82",
            (41491, "src-d/go-git"): b"6f43e8933ba3c04072d5d104acc6118aac3e52ee",
        },
        "commit_id": {
            (41475, "src-d/go-git"): 2755244,
            (41474, "src-d/go-git"): 2756276,
            (41473, "src-d/go-git"): 2758155,
            (41472, "src-d/go-git"): 2757229,
            (41471, "src-d/go-git"): 2757785,
            (41470, "src-d/go-git"): 2757112,
            (41469, "src-d/go-git"): 2755886,
            (41468, "src-d/go-git"): 2755046,
            (41467, "src-d/go-git"): 2758121,
            (41485, "src-d/go-git"): 2757058,
            (41484, "src-d/go-git"): 2757690,
            (41483, "src-d/go-git"): 2755789,
            (41482, "src-d/go-git"): 2755028,
            (41481, "src-d/go-git"): 2757357,
            (41480, "src-d/go-git"): 2756138,
            (41479, "src-d/go-git"): 2757371,
            (41478, "src-d/go-git"): 2755246,
            (41477, "src-d/go-git"): 2755522,
            (41476, "src-d/go-git"): 2755428,
            (41517, "src-d/go-git"): 2756702,
            (41519, "src-d/go-git"): 2757970,
            (41518, "src-d/go-git"): 2757510,
            (41514, "src-d/go-git"): 2758150,
            (41513, "src-d/go-git"): 2755784,
            (41516, "src-d/go-git"): 2756777,
            (41515, "src-d/go-git"): 2757689,
            (41512, "src-d/go-git"): 2757276,
            (41511, "src-d/go-git"): 2755834,
            (41510, "src-d/go-git"): 2757219,
            (41509, "src-d/go-git"): 2758137,
            (41508, "src-d/go-git"): 2755902,
            (41506, "src-d/go-git"): 2757904,
            (41505, "src-d/go-git"): 2757629,
            (41503, "src-d/go-git"): 2757988,
            (41502, "src-d/go-git"): 2758123,
            (41501, "src-d/go-git"): 2756516,
            (41507, "src-d/go-git"): 2756766,
            (41496, "src-d/go-git"): 2756112,
            (41495, "src-d/go-git"): 2756224,
            (41500, "src-d/go-git"): 2755176,
            (41499, "src-d/go-git"): 2755419,
            (41498, "src-d/go-git"): 2755730,
            (41497, "src-d/go-git"): 2757320,
            (41490, "src-d/go-git"): 2755165,
            (41488, "src-d/go-git"): 2755383,
            (41487, "src-d/go-git"): 2755718,
            (41486, "src-d/go-git"): 2755745,
            (41494, "src-d/go-git"): 2757079,
            (41493, "src-d/go-git"): 2757770,
            (41492, "src-d/go-git"): 2758144,
            (41491, "src-d/go-git"): 2756452,
        },
        "author_node_id": {
            (41475, "src-d/go-git"): 39789,
            (41474, "src-d/go-git"): 39789,
            (41473, "src-d/go-git"): 39789,
            (41472, "src-d/go-git"): 39789,
            (41471, "src-d/go-git"): 39789,
            (41470, "src-d/go-git"): 39789,
            (41469, "src-d/go-git"): 39789,
            (41468, "src-d/go-git"): 39789,
            (41467, "src-d/go-git"): 39789,
            (41485, "src-d/go-git"): 39789,
            (41484, "src-d/go-git"): 39789,
            (41483, "src-d/go-git"): 0,
            (41482, "src-d/go-git"): 39789,
            (41481, "src-d/go-git"): 39789,
            (41480, "src-d/go-git"): 39789,
            (41479, "src-d/go-git"): 39789,
            (41478, "src-d/go-git"): 39789,
            (41477, "src-d/go-git"): 39789,
            (41476, "src-d/go-git"): 39789,
            (41517, "src-d/go-git"): 39789,
            (41519, "src-d/go-git"): 39789,
            (41518, "src-d/go-git"): 39789,
            (41514, "src-d/go-git"): 39789,
            (41513, "src-d/go-git"): 39789,
            (41516, "src-d/go-git"): 39789,
            (41515, "src-d/go-git"): 39789,
            (41512, "src-d/go-git"): 39789,
            (41511, "src-d/go-git"): 40070,
            (41510, "src-d/go-git"): 39789,
            (41509, "src-d/go-git"): 39789,
            (41508, "src-d/go-git"): 40070,
            (41506, "src-d/go-git"): 40070,
            (41505, "src-d/go-git"): 39789,
            (41503, "src-d/go-git"): 39789,
            (41502, "src-d/go-git"): 40070,
            (41501, "src-d/go-git"): 40070,
            (41507, "src-d/go-git"): 39789,
            (41496, "src-d/go-git"): 39789,
            (41495, "src-d/go-git"): 40418,
            (41500, "src-d/go-git"): 39789,
            (41499, "src-d/go-git"): 39789,
            (41498, "src-d/go-git"): 39789,
            (41497, "src-d/go-git"): 39789,
            (41490, "src-d/go-git"): 39789,
            (41488, "src-d/go-git"): 39789,
            (41487, "src-d/go-git"): 39789,
            (41486, "src-d/go-git"): 39789,
            (41494, "src-d/go-git"): 39789,
            (41493, "src-d/go-git"): 39789,
            (41492, "src-d/go-git"): 39789,
            (41491, "src-d/go-git"): 39789,
        },
        "name": {
            (41475, "src-d/go-git"): "v4.13.1",
            (41474, "src-d/go-git"): "v4.13.0",
            (41473, "src-d/go-git"): "v4.12.0",
            (41472, "src-d/go-git"): "v4.11.0",
            (41471, "src-d/go-git"): "v4.10.0",
            (41470, "src-d/go-git"): "v4.9.1",
            (41469, "src-d/go-git"): "v4.9.0",
            (41468, "src-d/go-git"): "v4.8.1",
            (41467, "src-d/go-git"): "v4.8.0",
            (41485, "src-d/go-git"): "v4.7.1",
            (41484, "src-d/go-git"): "v4.7.0",
            (41483, "src-d/go-git"): "v4.6.0",
            (41482, "src-d/go-git"): "v4.5.0",
            (41481, "src-d/go-git"): "v4.4.1",
            (41480, "src-d/go-git"): "v4.4.0",
            (41479, "src-d/go-git"): "v4.3.1",
            (41478, "src-d/go-git"): "v4.3.0",
            (41477, "src-d/go-git"): "v4.2.1",
            (41476, "src-d/go-git"): "v4.2.0",
            (41517, "src-d/go-git"): "v4.1.1",
            (41519, "src-d/go-git"): "v4.1.0",
            (41518, "src-d/go-git"): "v4.0.0",
            (41514, "src-d/go-git"): "v4.0.0-rc15",
            (41513, "src-d/go-git"): "v4.0.0-rc14",
            (41516, "src-d/go-git"): "v4.0.0-rc13",
            (41515, "src-d/go-git"): "v4.0.0-rc12",
            (41512, "src-d/go-git"): "v4.0.0-rc11",
            (41511, "src-d/go-git"): "v4.0.0-rc10",
            (41510, "src-d/go-git"): "v4.0.0-rc9",
            (41509, "src-d/go-git"): "v4.0.0-rc8",
            (41508, "src-d/go-git"): "v4.0.0-rc7",
            (41506, "src-d/go-git"): "v4.0.0-rc6",
            (41505, "src-d/go-git"): "v4.0.0-rc5",
            (41503, "src-d/go-git"): "v4.0.0-rc4",
            (41502, "src-d/go-git"): "v4.0.0-rc3",
            (41501, "src-d/go-git"): "v4.0.0-rc2",
            (41507, "src-d/go-git"): "v4.0.0-rc1",
            (41496, "src-d/go-git"): "v3.1.1",
            (41495, "src-d/go-git"): "v3.1.0",
            (41500, "src-d/go-git"): "v3.0.4",
            (41499, "src-d/go-git"): "v3.0.3",
            (41498, "src-d/go-git"): "v3.0.2",
            (41497, "src-d/go-git"): "v3.0.1",
            (41490, "src-d/go-git"): "v3.0.0-alpha",
            (41488, "src-d/go-git"): "v2.2.0",
            (41487, "src-d/go-git"): "v2.1.3",
            (41486, "src-d/go-git"): "v2.1.2 hotfix",
            (41494, "src-d/go-git"): "v2.1.1 hotfix",
            (41493, "src-d/go-git"): "v2.1.0",
            (41492, "src-d/go-git"): "v2.0.0",
            (41491, "src-d/go-git"): "v1.0.0",
        },
        "tag": {
            (41475, "src-d/go-git"): "v4.13.1",
            (41474, "src-d/go-git"): "v4.13.0",
            (41473, "src-d/go-git"): "v4.12.0",
            (41472, "src-d/go-git"): "v4.11.0",
            (41471, "src-d/go-git"): "v4.10.0",
            (41470, "src-d/go-git"): "v4.9.1",
            (41469, "src-d/go-git"): "v4.9.0",
            (41468, "src-d/go-git"): "v4.8.1",
            (41467, "src-d/go-git"): "v4.8.0",
            (41485, "src-d/go-git"): "v4.7.1",
            (41484, "src-d/go-git"): "v4.7.0",
            (41483, "src-d/go-git"): "v4.6.0",
            (41482, "src-d/go-git"): "v4.5.0",
            (41481, "src-d/go-git"): "v4.4.1",
            (41480, "src-d/go-git"): "v4.4.0",
            (41479, "src-d/go-git"): "v4.3.1",
            (41478, "src-d/go-git"): "v4.3.0",
            (41477, "src-d/go-git"): "v4.2.1",
            (41476, "src-d/go-git"): "v4.2.0",
            (41517, "src-d/go-git"): "v4.1.1",
            (41519, "src-d/go-git"): "v4.1.0",
            (41518, "src-d/go-git"): "v4.0.0",
            (41514, "src-d/go-git"): "v4.0.0-rc15",
            (41513, "src-d/go-git"): "v4.0.0-rc14",
            (41516, "src-d/go-git"): "v4.0.0-rc13",
            (41515, "src-d/go-git"): "v4.0.0-rc12",
            (41512, "src-d/go-git"): "v4.0.0-rc11",
            (41511, "src-d/go-git"): "v4.0.0-rc10",
            (41510, "src-d/go-git"): "v4.0.0-rc9",
            (41509, "src-d/go-git"): "v4.0.0-rc8",
            (41508, "src-d/go-git"): "v4.0.0-rc7",
            (41506, "src-d/go-git"): "v4.0.0-rc6",
            (41505, "src-d/go-git"): "v4.0.0-rc5",
            (41503, "src-d/go-git"): "v4.0.0-rc4",
            (41502, "src-d/go-git"): "v4.0.0-rc3",
            (41501, "src-d/go-git"): "v4.0.0-rc2",
            (41507, "src-d/go-git"): "v4.0.0-rc1",
            (41496, "src-d/go-git"): "v3.1.1",
            (41495, "src-d/go-git"): "v3.1.0",
            (41500, "src-d/go-git"): "v3.0.4",
            (41499, "src-d/go-git"): "v3.0.3",
            (41498, "src-d/go-git"): "v3.0.2",
            (41497, "src-d/go-git"): "v3.0.1",
            (41490, "src-d/go-git"): "v3.0.0",
            (41488, "src-d/go-git"): "v2.2.0",
            (41487, "src-d/go-git"): "v2.1.3",
            (41486, "src-d/go-git"): "v2.1.2",
            (41494, "src-d/go-git"): "v2.1.1",
            (41493, "src-d/go-git"): "v2.1.0",
            (41492, "src-d/go-git"): "v2.0.0",
            (41491, "src-d/go-git"): "v1.0.0",
        },
        "url": {
            (41475, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.13.1",
            (41474, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.13.0",
            (41473, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.12.0",
            (41472, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.11.0",
            (41471, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.10.0",
            (41470, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.9.1",
            (41469, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.9.0",
            (41468, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.8.1",
            (41467, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.8.0",
            (41485, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.7.1",
            (41484, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.7.0",
            (41483, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.6.0",
            (41482, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.5.0",
            (41481, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.4.1",
            (41480, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.4.0",
            (41479, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.3.1",
            (41478, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.3.0",
            (41477, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.2.1",
            (41476, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.2.0",
            (41517, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.1.1",
            (41519, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.1.0",
            (41518, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0",
            (41514, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc15",
            (41513, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc14",
            (41516, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc13",
            (41515, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc12",
            (41512, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc11",
            (41511, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc10",
            (41510, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc9",
            (41509, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc8",
            (41508, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc7",
            (41506, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc6",
            (41505, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc5",
            (41503, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc4",
            (41502, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc3",
            (41501, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc2",
            (41507, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v4.0.0-rc1",
            (41496, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.1.1",
            (41495, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.1.0",
            (41500, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.0.4",
            (41499, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.0.3",
            (41498, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.0.2",
            (41497, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.0.1",
            (41490, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v3.0.0",
            (41488, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v2.2.0",
            (41487, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v2.1.3",
            (41486, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v2.1.2",
            (41494, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v2.1.1",
            (41493, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v2.1.0",
            (41492, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v2.0.0",
            (41491, "src-d/go-git"): "https://github.com/src-d/go-git/releases/tag/v1.0.0",
        },
        "matched_by": {
            (41475, "src-d/go-git"): 1,
            (41474, "src-d/go-git"): 1,
            (41473, "src-d/go-git"): 1,
            (41472, "src-d/go-git"): 1,
            (41471, "src-d/go-git"): 1,
            (41470, "src-d/go-git"): 1,
            (41469, "src-d/go-git"): 1,
            (41468, "src-d/go-git"): 1,
            (41467, "src-d/go-git"): 1,
            (41485, "src-d/go-git"): 1,
            (41484, "src-d/go-git"): 1,
            (41483, "src-d/go-git"): 1,
            (41482, "src-d/go-git"): 1,
            (41481, "src-d/go-git"): 1,
            (41480, "src-d/go-git"): 1,
            (41479, "src-d/go-git"): 1,
            (41478, "src-d/go-git"): 1,
            (41477, "src-d/go-git"): 1,
            (41476, "src-d/go-git"): 1,
            (41517, "src-d/go-git"): 1,
            (41519, "src-d/go-git"): 1,
            (41518, "src-d/go-git"): 1,
            (41514, "src-d/go-git"): 1,
            (41513, "src-d/go-git"): 1,
            (41516, "src-d/go-git"): 1,
            (41515, "src-d/go-git"): 1,
            (41512, "src-d/go-git"): 1,
            (41511, "src-d/go-git"): 1,
            (41510, "src-d/go-git"): 1,
            (41509, "src-d/go-git"): 1,
            (41508, "src-d/go-git"): 1,
            (41506, "src-d/go-git"): 1,
            (41505, "src-d/go-git"): 1,
            (41503, "src-d/go-git"): 1,
            (41502, "src-d/go-git"): 1,
            (41501, "src-d/go-git"): 1,
            (41507, "src-d/go-git"): 1,
            (41496, "src-d/go-git"): 1,
            (41495, "src-d/go-git"): 1,
            (41500, "src-d/go-git"): 1,
            (41499, "src-d/go-git"): 1,
            (41498, "src-d/go-git"): 1,
            (41497, "src-d/go-git"): 1,
            (41490, "src-d/go-git"): 1,
            (41488, "src-d/go-git"): 1,
            (41487, "src-d/go-git"): 1,
            (41486, "src-d/go-git"): 1,
            (41494, "src-d/go-git"): 1,
            (41493, "src-d/go-git"): 1,
            (41492, "src-d/go-git"): 1,
            (41491, "src-d/go-git"): 1,
        },
        "author": {
            (41475, "src-d/go-git"): "mcuadros",
            (41474, "src-d/go-git"): "mcuadros",
            (41473, "src-d/go-git"): "mcuadros",
            (41472, "src-d/go-git"): "mcuadros",
            (41471, "src-d/go-git"): "mcuadros",
            (41470, "src-d/go-git"): "mcuadros",
            (41469, "src-d/go-git"): "mcuadros",
            (41468, "src-d/go-git"): "mcuadros",
            (41467, "src-d/go-git"): "mcuadros",
            (41485, "src-d/go-git"): "mcuadros",
            (41484, "src-d/go-git"): "mcuadros",
            (41483, "src-d/go-git"): None,
            (41482, "src-d/go-git"): "mcuadros",
            (41481, "src-d/go-git"): "mcuadros",
            (41480, "src-d/go-git"): "mcuadros",
            (41479, "src-d/go-git"): "mcuadros",
            (41478, "src-d/go-git"): "mcuadros",
            (41477, "src-d/go-git"): "mcuadros",
            (41476, "src-d/go-git"): "mcuadros",
            (41517, "src-d/go-git"): "mcuadros",
            (41519, "src-d/go-git"): "mcuadros",
            (41518, "src-d/go-git"): "mcuadros",
            (41514, "src-d/go-git"): "mcuadros",
            (41513, "src-d/go-git"): "mcuadros",
            (41516, "src-d/go-git"): "mcuadros",
            (41515, "src-d/go-git"): "mcuadros",
            (41512, "src-d/go-git"): "mcuadros",
            (41511, "src-d/go-git"): "smola",
            (41510, "src-d/go-git"): "mcuadros",
            (41509, "src-d/go-git"): "mcuadros",
            (41508, "src-d/go-git"): "smola",
            (41506, "src-d/go-git"): "smola",
            (41505, "src-d/go-git"): "mcuadros",
            (41503, "src-d/go-git"): "mcuadros",
            (41502, "src-d/go-git"): "smola",
            (41501, "src-d/go-git"): "smola",
            (41507, "src-d/go-git"): "mcuadros",
            (41496, "src-d/go-git"): "mcuadros",
            (41495, "src-d/go-git"): "alcortesm",
            (41500, "src-d/go-git"): "mcuadros",
            (41499, "src-d/go-git"): "mcuadros",
            (41498, "src-d/go-git"): "mcuadros",
            (41497, "src-d/go-git"): "mcuadros",
            (41490, "src-d/go-git"): "mcuadros",
            (41488, "src-d/go-git"): "mcuadros",
            (41487, "src-d/go-git"): "mcuadros",
            (41486, "src-d/go-git"): "mcuadros",
            (41494, "src-d/go-git"): "mcuadros",
            (41493, "src-d/go-git"): "mcuadros",
            (41492, "src-d/go-git"): "mcuadros",
            (41491, "src-d/go-git"): "mcuadros",
        },
    }


@with_defer
async def test_mine_deployments_precomputed_dummy(
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    deps1 = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
    )
    people1 = deployment_facts_extract_mentioned_people(deps1)
    await wait_deferred()
    deps2 = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
    )
    people2 = deployment_facts_extract_mentioned_people(deps2)
    assert len(deps1) == len(deps2) == 1
    assert deps1.index.tolist() == deps2.index.tolist()
    assert (rel1 := deps1["releases"].iloc[0]).columns.tolist() == (
        rel2 := deps2["releases"].iloc[0]
    ).columns.tolist()
    assert len(rel1) == len(rel2)
    assert (rel1.index == rel2.index).all()
    del deps1["releases"]
    del deps2["releases"]
    assert_frame_equal(deps1, deps2)
    assert (people1 == people2).all()


@with_defer
async def test_mine_deployments_precomputed_sample(
    sample_deployments,
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
):
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    deps1 = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
    )
    people1 = deployment_facts_extract_mentioned_people(deps1)
    await wait_deferred()
    deps2 = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
    )
    people2 = deployment_facts_extract_mentioned_people(deps2)
    assert len(deps1) == len(deps2) == 2 * 9
    assert deps1.index.tolist() == deps2.index.tolist()
    lensum = 0
    for i in range(18):
        assert (rel1 := deps1["releases"].iloc[i]).columns.tolist() == (
            rel2 := deps2["releases"].iloc[i]
        ).columns.tolist(), i
        assert len(rel1) == len(rel2)
        assert (rel1.index.values == rel2.index.values).all()
        lensum += len(rel1)
    assert lensum == 68 * 2
    del deps1["releases"]
    del deps2["releases"]
    assert_frame_equal(deps1, deps2)
    assert (people1 == people2).all()


@with_defer
async def test_mine_deployments_reversed(
    sample_deployments,
    release_match_setting_tag,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
):
    time_from = datetime(2018, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    deps1 = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
    )
    deployment_facts_extract_mentioned_people(deps1)
    await wait_deferred()

    name = "%s_%d_%02d_%02d" % ("production", 2019, 12, 1)
    await rdb.execute(
        insert(DeploymentNotification).values(
            dict(
                account_id=1,
                name=name,
                conclusion="SUCCESS",
                environment="production",
                started_at=datetime(2019, 12, 1, tzinfo=timezone.utc),
                finished_at=datetime(2019, 12, 1, 0, 10, tzinfo=timezone.utc),
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
            ),
        ),
    )
    await rdb.execute(
        insert(DeployedComponent).values(
            dict(
                account_id=1,
                deployment_name=name,
                repository_node_id=40550,
                reference="v4.13.0",
                resolved_commit_node_id=2756276,
                created_at=datetime.now(timezone.utc),
            ),
        ),
    )

    deps2 = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        None,
    )
    deployment_facts_extract_mentioned_people(deps2)
    assert len(deps2) == len(deps1) + 1
    assert deps1.index.tolist() == deps2.index.tolist()[1:]
    assert deps2.iloc[0][DeploymentFacts.f.commits_overall][0] == 0
    assert deps2.iloc[0][DeploymentFacts.f.commits_prs][0] == 0
    assert len(deps2.iloc[0][DeploymentFacts.f.prs]) == 0


@with_defer
async def test_mine_deployments_empty(
    release_match_setting_tag_or_branch,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
):
    await rdb.execute(delete(DeployedLabel))
    await rdb.execute(delete(DeployedComponent))
    await rdb.execute(delete(DeploymentNotification))
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [DeploymentConclusion.SUCCESS],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    assert len(deps) == 0
    await wait_deferred()
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [DeploymentConclusion.SUCCESS],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_tag_or_branch,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        None,
        None,
        None,
        cache,
    )
    assert len(deps) == 0


@pytest.mark.parametrize("with_premining", [True, False])
@with_defer
async def test_mine_deployments_event_releases(
    sample_deployments,
    release_match_setting_event,
    branches,
    default_branches,
    prefixer,
    mdb,
    pdb,
    rdb,
    cache,
    with_premining,
):
    await rdb.execute(
        insert(ReleaseNotification).values(
            ReleaseNotification(
                account_id=1,
                repository_node_id=40550,
                commit_hash_prefix="1edb992",
                name="Pushed!",
                author_node_id=40020,
                url="www",
                published_at=datetime(2019, 9, 1, tzinfo=timezone.utc),
            )
            .create_defaults()
            .explode(with_primary_keys=True),
        ),
    )
    time_from = datetime(2015, 1, 1, tzinfo=timezone.utc)
    time_to = datetime(2020, 1, 1, tzinfo=timezone.utc)
    if with_premining:
        await mine_releases(
            ["src-d/go-git"],
            {},
            branches,
            default_branches,
            time_from,
            time_to,
            LabelFilter.empty(),
            JIRAFilter.empty(),
            release_match_setting_event,
            LogicalRepositorySettings.empty(),
            prefixer,
            1,
            (6366825,),
            mdb,
            pdb,
            rdb,
            None,
            with_avatars=False,
            with_pr_titles=False,
            with_deployments=False,
        )
        await wait_deferred()
    deps = await mine_deployments(
        ["src-d/go-git"],
        {},
        time_from,
        time_to,
        ["production", "staging"],
        [],
        {},
        {},
        LabelFilter.empty(),
        JIRAFilter.empty(),
        release_match_setting_event,
        LogicalRepositorySettings.empty(),
        branches,
        default_branches,
        prefixer,
        1,
        (6366825,),
        mdb,
        pdb,
        rdb,
        cache,
    )
    deployment_facts_extract_mentioned_people(deps)
    for depname in ("production_2019_11_01", "staging_2019_11_01"):
        df = deps.loc[depname]["releases"]
        assert len(df) == 1
        assert len(df.iloc[0][DeploymentFacts.f.commit_authors]) == 113
        assert len(set(df.iloc[0][DeploymentFacts.f.commit_authors])) == 113
        assert len(df.iloc[0]["prs_node_id"]) == 509
        assert len(set(df.iloc[0]["prs_node_id"])) == 509
        assert df.iloc[0][Release.name.name] == "Pushed!"
        assert df.iloc[0][Release.sha.name] == b"1edb992dbc419a0767b1cf3a524b0d35529799f5"


async def _validate_deployed_prs(pdb: morcilla.Database) -> None:
    rows = await pdb.fetch_all(
        select([GitHubPullRequestDeployment.pull_request_id])
        .where(
            and_(
                GitHubPullRequestDeployment.deployment_name.like("production_%"),
                GitHubPullRequestDeployment.deployment_name.notin_(
                    [
                        "production_2018_01_10",
                        "production_2018_01_12",
                    ],
                ),
            ),
        )
        .group_by(GitHubPullRequestDeployment.pull_request_id)
        .having(func.count(GitHubPullRequestDeployment.deployment_name) > 1),
    )
    assert len(rows) == 0, rows


def _validate_deployments(deps, count, with_2016):
    assert len(deps) == count * 2
    for env in ("staging", "production"):
        assert deps.loc[f"{env}_2018_01_11"]["conclusion"] == "SUCCESS"
        assert deps.loc[f"{env}_2018_01_12"]["conclusion"] == "FAILURE"
    assert (deps["environment"] == "production").sum() == count
    assert (deps["environment"] == "staging").sum() == count
    components = deps["components"]
    for c in components:
        assert len(c) == 1
        assert c.iloc[0]["repository_node_id"] == 40550
        assert c.iloc[0]["resolved_commit_node_id"] > 0
    assert components["production_2018_01_11"].iloc[0]["reference"] == "4.0.0"
    assert components["staging_2018_01_11"].iloc[0]["reference"] == "4.0.0"
    commits_overall = deps["commits_overall"]
    if with_2016:
        assert commits_overall["production_2016_07_06"] == [168]
        assert commits_overall["production_2016_12_01"] == [14]
    assert commits_overall["production_2018_01_10"] == [832]
    assert commits_overall["production_2018_01_11"] == [832]
    assert commits_overall["production_2018_01_12"] == [0]
    assert commits_overall["production_2018_08_01"] == [122]
    assert commits_overall["production_2018_12_01"] == [198]
    assert commits_overall["production_2018_12_02"] == [0]
    assert commits_overall["production_2019_11_01"] == [176]
    pdeps = deps[deps["environment"] == "production"].copy()
    releases = pdeps["releases"]
    if with_2016:
        assert set(releases["production_2016_07_06"]["tag"]) == {
            "v2.2.0",
            "v3.1.0",
            "v3.0.3",
            "v3.0.1",
            "v1.0.0",
            "v3.0.2",
            "v3.0.4",
            "v2.1.1",
            "v2.0.0",
            "v3.0.0",
            "v2.1.2",
            "v2.1.3",
            "v2.1.0",
        }
        assert set(releases["production_2016_12_01"]["tag"]) == {"v3.2.0", "v3.1.1"}
    assert set(releases["production_2018_01_10"]["tag"]) == {
        "v4.0.0-rc10",
        "v4.0.0-rc1",
        "v4.0.0-rc6",
        "v4.0.0-rc8",
        "v4.0.0-rc7",
        "v4.0.0-rc9",
        "v4.0.0",
        "v4.0.0-rc13",
        "v4.0.0-rc2",
        "v4.0.0-rc12",
        "v4.0.0-rc14",
        "v4.0.0-rc15",
        "v4.0.0-rc3",
        "v4.0.0-rc5",
        "v4.0.0-rc4",
        "v4.0.0-rc11",
    }
    assert set(releases["production_2018_01_11"]["tag"]) == {
        "v4.0.0-rc10",
        "v4.0.0-rc1",
        "v4.0.0-rc6",
        "v4.0.0-rc8",
        "v4.0.0-rc7",
        "v4.0.0-rc9",
        "v4.0.0",
        "v4.0.0-rc13",
        "v4.0.0-rc2",
        "v4.0.0-rc12",
        "v4.0.0-rc14",
        "v4.0.0-rc15",
        "v4.0.0-rc3",
        "v4.0.0-rc5",
        "v4.0.0-rc4",
        "v4.0.0-rc11",
    }
    assert releases["production_2018_01_12"].empty
    assert set(releases["production_2018_08_01"]["tag"]) == {
        "v4.3.1",
        "v4.5.0",
        "v4.4.0",
        "v4.3.0",
        "v4.2.0",
        "v4.4.1",
        "v4.2.1",
        "v4.1.0",
        "v4.1.1",
    }
    assert set(releases["production_2018_12_01"]["tag"]) == {
        "v4.7.1",
        "v4.6.0",
        "v4.8.0",
        "v4.8.1",
        "v4.7.0",
    }
    assert releases["production_2018_12_02"].empty
    assert set(releases["production_2019_11_01"]["tag"]) == {
        "v4.13.0",
        "v4.12.0",
        "v4.13.1",
        "v4.9.0",
        "v4.9.1",
        "v4.11.0",
        "v4.10.0",
    }
    del pdeps["name"]
    del pdeps["environment"]
    pdeps.sort_index(inplace=True)
    pdeps.reset_index(drop=True, inplace=True)
    sdeps = deps[deps["environment"] == "staging"].copy()
    del sdeps["name"]
    del sdeps["environment"]
    sdeps.sort_index(inplace=True)
    sdeps.reset_index(drop=True, inplace=True)
    for pdf, sdf in zip(pdeps["releases"].values, sdeps["releases"].values):
        assert_frame_equal(pdf, sdf)
    del pdeps["releases"]
    del sdeps["releases"]
    assert_frame_equal(pdeps, sdeps)


class TestHideOutlierFirstDeployments:
    @with_defer
    async def test_base(
        self,
        sample_deployments,
        branches,
        prefixer,
        mdb,
        pdb,
        rdb,
        sdb,
    ) -> None:
        meta_ids = await get_metadata_account_ids(1, sdb, None)
        assert (await count(pdb, GitHubDeploymentFacts)) == 0
        assert (await count(pdb, GitHubPullRequestDeployment)) == 0

        deps = await mine_deployments(
            **self._mine_common_kwargs(),
            branches=branches,
            prefixer=prefixer,
            mdb=mdb,
            pdb=pdb,
            rdb=rdb,
        )
        # wait deferred tasks writing to pdb to complete
        await wait_deferred()

        expected_outlier_deployments = ["staging_2016_07_06", "production_2016_07_06"]

        pr_where = GitHubPullRequestDeployment.deployment_name.in_(expected_outlier_deployments)
        pre_hiding_pr_count = await count(pdb, GitHubPullRequestDeployment)
        to_be_removed_pr_count = await count(pdb, GitHubPullRequestDeployment, pr_where)

        commit_where = GitHubCommitDeployment.deployment_name.in_(expected_outlier_deployments)
        pre_hiding_commit_count = await count(pdb, GitHubCommitDeployment)
        to_be_removed_commit_count = await count(pdb, GitHubCommitDeployment, commit_where)

        rel_where = GitHubReleaseDeployment.deployment_name.in_(expected_outlier_deployments)
        pre_hiding_release_count = await count(pdb, GitHubReleaseDeployment)
        to_be_removed_release_count = await count(pdb, GitHubReleaseDeployment, rel_where)

        await hide_outlier_first_deployments(deps, 1, meta_ids, mdb, pdb, 1.1)

        post_hiding_pr_count = await count(pdb, GitHubPullRequestDeployment)
        post_hiding_commit_count = await count(pdb, GitHubCommitDeployment)
        post_hiding_release_count = await count(pdb, GitHubReleaseDeployment)

        assert post_hiding_pr_count == pre_hiding_pr_count - to_be_removed_pr_count
        assert post_hiding_commit_count == pre_hiding_commit_count - to_be_removed_commit_count
        assert post_hiding_release_count == pre_hiding_release_count - to_be_removed_release_count

        assert await count(pdb, GitHubPullRequestDeployment, pr_where) == 0

        depl_where = GitHubDeploymentFacts.deployment_name.in_(expected_outlier_deployments)
        depl_rows = await pdb.fetch_all(sa.select(GitHubDeploymentFacts).where(depl_where))
        for depl_row in depl_rows:
            facts = DeploymentFacts(
                depl_row[GitHubDeploymentFacts.data.name],
                name=depl_row[GitHubDeploymentFacts.deployment_name.name],
            )
            assert not len(facts.prs)

    @with_defer
    async def test_no_deployment_facts(
        self,
        branches,
        prefixer,
        mdb,
        pdb,
        rdb,
        sdb,
    ) -> None:
        meta_ids = await get_metadata_account_ids(1, sdb, None)
        # delete notifications so that mine_deployments will find nothing
        await rdb.execute(sa.delete(DeploymentNotification))

        deps = await mine_deployments(
            **self._mine_common_kwargs(),
            branches=branches,
            prefixer=prefixer,
            mdb=mdb,
            pdb=pdb,
            rdb=rdb,
        )

        assert deps.empty
        # wait deferred tasks writing to pdb to complete
        await wait_deferred()

        assert (await count(pdb, GitHubPullRequestDeployment)) == 0
        assert (await count(pdb, GitHubCommitDeployment)) == 0
        assert (await count(pdb, GitHubReleaseDeployment)) == 0

        await hide_outlier_first_deployments(deps, 1, meta_ids, mdb, pdb, 1.1)

    @with_defer
    async def test_multiple_deployments_same_time(
        self,
        branches,
        prefixer,
        mdb,
        pdb,
        rdb,
        sdb,
    ) -> None:
        meta_ids = await get_metadata_account_ids(1, sdb, None)
        await rdb.execute(sa.delete(DeploymentNotification))
        started_at = dt(2019, 1, 1)
        await models_insert(
            rdb,
            DeploymentNotificationFactory(name="deploy0", started_at=started_at),
            DeploymentNotificationFactory(name="deploy1", started_at=started_at),
            DeployedComponentFactory(deployment_name="deploy0", repository_node_id=40550),
            DeployedComponentFactory(deployment_name="deploy1", repository_node_id=40550),
        )

        deps = await mine_deployments(
            **self._mine_common_kwargs(),
            branches=branches,
            prefixer=prefixer,
            mdb=mdb,
            pdb=pdb,
            rdb=rdb,
        )
        await wait_deferred()

        await hide_outlier_first_deployments(deps, 1, meta_ids, mdb, pdb, 1.1)

        await assert_missing_row(pdb, GitHubPullRequestDeployment, deployment_name="deploy0")

    @classmethod
    def _mine_common_kwargs(cls) -> dict:
        return {
            "repositories": ["src-d/go-git"],
            "participants": {},
            "time_from": datetime(2015, 1, 1, tzinfo=timezone.utc),
            "time_to": datetime(2020, 1, 1, tzinfo=timezone.utc),
            "environments": ["production", "staging"],
            "conclusions": [],
            "with_labels": {},
            "without_labels": {},
            "pr_labels": LabelFilter.empty(),
            "jira": JIRAFilter.empty(),
            "release_settings": get_release_match_setting_tag(),
            "logical_settings": LogicalRepositorySettings.empty(),
            "default_branches": get_default_branches(),
            "account": 1,
            "meta_ids": (6366825,),
            "cache": None,
        }
